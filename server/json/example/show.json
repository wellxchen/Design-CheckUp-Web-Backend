@@ -1,1718 +0,0 @@
{   'error': {   u'Code Smells': [   {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'\t\t<span class="sym-21 sym">command</span> = <span class="sym-21 sym">command</span>.trim();'],
                                                         'msg': '',
                                                         'textRange': {   u'endLine': 35,
                                                                          u'endOffset': 9,
                                                                          u'startLine': 35,
                                                                          u'startOffset': 2}}],
                                         'message': u'Introduce a new variable instead of reusing the parameter "command".',
                                         'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                         'rule': u'Method parameters, caught exceptions and foreach variables should not be reassigned',
                                         'severity': 'low'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'\t\t<span class="sym-34 sym">command</span> = <span class="sym-34 sym">command</span>.substring(<span class="sym-34 sym">command</span>.lastIndexOf(<span class="s">\']\'</span>)+<span class="c">1</span>).trim();'],
                                                         'msg': '',
                                                         'textRange': {   u'endLine': 79,
                                                                          u'endOffset': 9,
                                                                          u'startLine': 79,
                                                                          u'startOffset': 2}}],
                                         'message': u'Introduce a new variable instead of reusing the parameter "command".',
                                         'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                         'rule': u'Method parameters, caught exceptions and foreach variables should not be reassigned',
                                         'severity': 'low'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'\t\t<span class="k">while</span>(<span class="sym-81 sym">hasMethods</span>){'],
                                                         u'msg': u'Nesting + 1',
                                                         u'textRange': {   u'endLine': 177,
                                                                           u'endOffset': 7,
                                                                           u'startLine': 177,
                                                                           u'startOffset': 2}},
                                                     {   'code': [   u'\t\t\t<span class="k">for</span>(String <span class="sym-83 sym">s</span>: <span class="sym-82 sym">commandPieces</span>){'],
                                                         u'msg': u'Nesting + 1',
                                                         u'textRange': {   u'endLine': 180,
                                                                           u'endOffset': 6,
                                                                           u'startLine': 180,
                                                                           u'startOffset': 3}},
                                                     {   'code': [   u'\t\t\t\t<span class="k">if</span>(<span class="sym-80 sym">commandManager</span>.contains(<span class="sym-83 sym">s</span>) != <span class="k">null</span>){'],
                                                         u'msg': u'Nesting + 1',
                                                         u'textRange': {   u'endLine': 181,
                                                                           u'endOffset': 6,
                                                                           u'startLine': 181,
                                                                           u'startOffset': 4}}],
                                         'message': u'Refactor this code to not nest more than 3 if/for/while/switch/try statements.',
                                         'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                         'rule': u'Control flow statements "if", "for", "while", "switch" and "try" should not be nested too deeply',
                                         'severity': 'high'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'\t\t\t\t\t<span class="sym-79 sym">command</span> = <span class="sym-79 sym">command</span>.substring(<span class="c">0</span>, <span class="sym-84 sym">loc</span>) + <span class="sym-85 sym">str2</span>;'],
                                                         'msg': '',
                                                         'textRange': {   u'endLine': 188,
                                                                          u'endOffset': 12,
                                                                          u'startLine': 188,
                                                                          u'startOffset': 5}}],
                                         'message': u'Introduce a new variable instead of reusing the parameter "command".',
                                         'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                         'rule': u'Method parameters, caught exceptions and foreach variables should not be reassigned',
                                         'severity': 'low'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'\t\t\t<span class="sym-104 sym">tempString</span> = <span class="sym-104 sym">tempString</span>.substring(<span class="sym-107 sym">breakpoint</span>).trim();'],
                                                         'msg': '',
                                                         'textRange': {   u'endLine': 240,
                                                                          u'endOffset': 13,
                                                                          u'startLine': 240,
                                                                          u'startOffset': 3}}],
                                         'message': u'Introduce a new variable instead of reusing the parameter "tempString".',
                                         'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                         'rule': u'Method parameters, caught exceptions and foreach variables should not be reassigned',
                                         'severity': 'low'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'\t\t\t<span class="sym-104 sym">tempString</span> = <span class="sym-104 sym">tempString</span>.substring(<span class="c">0</span>, <span class="sym-104 sym">tempString</span>.indexOf(<span class="s">"["</span>)) + <span class="sym-104 sym">tempString</span>.substring(<span class="sym-104 sym">tempString</span>.indexOf(<span class="s">\']\'</span>) +<span class="c">1</span> );'],
                                                         'msg': '',
                                                         'textRange': {   u'endLine': 257,
                                                                          u'endOffset': 13,
                                                                          u'startLine': 257,
                                                                          u'startOffset': 3}}],
                                         'message': u'Introduce a new variable instead of reusing the parameter "tempString".',
                                         'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                         'rule': u'Method parameters, caught exceptions and foreach variables should not be reassigned',
                                         'severity': 'low'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'\t\t<span class="k">if</span>(!<span class="sym-134 sym">parsedCommand</span>.equals(<span class="s">""</span>)){'],
                                                         u'msg': u'Nesting + 1',
                                                         u'textRange': {   u'endLine': 318,
                                                                           u'endOffset': 4,
                                                                           u'startLine': 318,
                                                                           u'startOffset': 2}},
                                                     {   'code': [   u'\t\t\t<span class="k">try</span>{'],
                                                         u'msg': u'Nesting + 1',
                                                         u'textRange': {   u'endLine': 322,
                                                                           u'endOffset': 6,
                                                                           u'startLine': 322,
                                                                           u'startOffset': 3}},
                                                     {   'code': [   u'\t\t\t\t<span class="k">if</span>(<span class="sym-132 sym">commands</span>[<span class="sym-133 sym">i</span>].charAt(<span class="c">0</span>) == <span class="s">\':\'</span>){'],
                                                         u'msg': u'Nesting + 1',
                                                         u'textRange': {   u'endLine': 323,
                                                                           u'endOffset': 6,
                                                                           u'startLine': 323,
                                                                           u'startOffset': 4}}],
                                         'message': u'Refactor this code to not nest more than 3 if/for/while/switch/try statements.',
                                         'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                         'rule': u'Control flow statements "if", "for", "while", "switch" and "try" should not be nested too deeply',
                                         'severity': 'high'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'\t\t<span class="k">if</span>(<span class="sym-150 sym">count</span> == <span class="c">0</span>){'],
                                                         u'msg': u'Nesting + 1',
                                                         u'textRange': {   u'endLine': 368,
                                                                           u'endOffset': 4,
                                                                           u'startLine': 368,
                                                                           u'startOffset': 2}},
                                                     {   'code': [   u'\t\t\t<span class="k">if</span>(<span class="sym-148 sym">current</span>.getChildren().size() == <span class="sym-15 sym">myParametersMap</span>.getNumParams(<span class="sym-148 sym">current</span>.getName())){'],
                                                         u'msg': u'Nesting + 1',
                                                         u'textRange': {   u'endLine': 369,
                                                                           u'endOffset': 5,
                                                                           u'startLine': 369,
                                                                           u'startOffset': 3}},
                                                     {   'code': [   u'\t\t\t\t<span class="k">for</span>(ParseNode <span class="sym-154 sym">node</span>: <span class="sym-153 sym">nodeChildren</span>){'],
                                                         u'msg': u'Nesting + 1',
                                                         u'textRange': {   u'endLine': 372,
                                                                           u'endOffset': 7,
                                                                           u'startLine': 372,
                                                                           u'startOffset': 4}}],
                                         'message': u'Refactor this code to not nest more than 3 if/for/while/switch/try statements.',
                                         'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                         'rule': u'Control flow statements "if", "for", "while", "switch" and "try" should not be nested too deeply',
                                         'severity': 'high'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'            <span class="sym-47 sym">UIPane</span> = <span class="sym-48 sym">UI</span>.getGridPane();'],
                                                         'msg': '',
                                                         'textRange': {   u'endLine': 124,
                                                                          u'endOffset': 18,
                                                                          u'startLine': 124,
                                                                          u'startOffset': 12}}],
                                         'message': u'Introduce a new variable instead of reusing the parameter "UIPane".',
                                         'path': [   u'duke-compsci308:test-xu:src/frontend/SLOGOScreen.java'],
                                         'rule': u'Method parameters, caught exceptions and foreach variables should not be reassigned',
                                         'severity': 'low'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'            <span class="sym-45 sym">title</span> = <span class="sym-45 sym">title</span> + <span class="s">" "</span> + (<span class="sym-22 sym">myTabPane</span>.getTabs().size() + <span class="c">1</span>);'],
                                                         'msg': '',
                                                         'textRange': {   u'endLine': 125,
                                                                          u'endOffset': 17,
                                                                          u'startLine': 125,
                                                                          u'startOffset': 12}}],
                                         'message': u'Introduce a new variable instead of reusing the parameter "title".',
                                         'path': [   u'duke-compsci308:test-xu:src/frontend/SLOGOScreen.java'],
                                         'rule': u'Method parameters, caught exceptions and foreach variables should not be reassigned',
                                         'severity': 'low'}],
                 u'Communication': {   u'Concise code': {   'category description': u"Code should be 'concise' (use booleans wisely, for-each loop where possible, use Java API calls instead of implementing yourself)",
                                                            'detail': [   {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\t<span class="sym-7 sym">Map</span>&lt;String, String&gt; <span class="sym-92 sym">paramToNum</span> = <span class="k">new</span> HashMap&lt;String, String&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 200,
                                                                                                               u'endOffset': 62,
                                                                                                               u'startLine': 200,
                                                                                                               u'startOffset': 46}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\tList&lt;ParseNode&gt; <span class="sym-116 sym">rootList</span> = <span class="k">new</span> <span class="sym-5 sym">ArrayList</span>&lt;ParseNode&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 266,
                                                                                                               u'endOffset': 53,
                                                                                                               u'startLine': 266,
                                                                                                               u'startOffset': 42}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\tList&lt;ParseNode&gt; <span class="sym-118 sym">instructions</span> = <span class="k">new</span> <span class="sym-5 sym">ArrayList</span>&lt;ParseNode&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 272,
                                                                                                               u'endOffset': 57,
                                                                                                               u'startLine': 272,
                                                                                                               u'startOffset': 46}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t<span class="k">private</span> <span class="sym-2 sym">Map</span>&lt;String, MathInterface&gt; <span class="sym-5 sym">instructions</span> = <span class="k">new</span> <span class="sym-1 sym">HashMap</span>&lt;String, MathInterface&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 10,
                                                                                                               u'endOffset': 85,
                                                                                                               u'startLine': 10,
                                                                                                               u'startOffset': 62}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/Commands.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\t<span class="sym-4 sym">myParamMap</span> = <span class="k">new</span> <span class="sym-1 sym">HashMap</span>&lt;String, Integer&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 10,
                                                                                                               u'endOffset': 43,
                                                                                                               u'startLine': 10,
                                                                                                               u'startOffset': 26}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/ParametersMap.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t    \t<span class="sym-4 sym">myMultiValues</span> = <span class="k">new</span> ArrayList&lt;Double&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 14,
                                                                                                               u'endOffset': 43,
                                                                                                               u'startLine': 14,
                                                                                                               u'startOffset': 35}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/ParseNode.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t        <span class="sym-5 sym">myChildren</span> = <span class="k">new</span> ArrayList&lt;<span class="sym-1 sym">ParseNode</span>&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 17,
                                                                                                               u'endOffset': 46,
                                                                                                               u'startLine': 17,
                                                                                                               u'startOffset': 35}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/ParseNode.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\t<span class="sym-5 sym">myTurtleInterface</span> = <span class="k">new</span> HashMap&lt;String, SpecialTurtleInterface&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 15,
                                                                                                               u'endOffset': 65,
                                                                                                               u'startLine': 15,
                                                                                                               u'startOffset': 33}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/UserDefinedCommands.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\tMap&lt;String, UserDefinedInterface&gt; <span class="sym-8 sym">result</span> = <span class="k">new</span> HashMap&lt;String, UserDefinedInterface&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 20,
                                                                                                               u'endOffset': 86,
                                                                                                               u'startLine': 20,
                                                                                                               u'startOffset': 56}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/UserDefinedCommands.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\t\tArrayList&lt;String&gt; <span class="sym-21 sym">commands</span> = <span class="k">new</span> ArrayList&lt;String&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 42,
                                                                                                               u'endOffset': 53,
                                                                                                               u'startLine': 42,
                                                                                                               u'startOffset': 45}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/UserDefinedCommands.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'    <span class="k">private</span> ComboBox&lt;Entry&gt; <span class="sym-25 sym">mySavedWorkspaces</span> = <span class="k">new</span> ComboBox&lt;Entry&gt;(<span class="sym-24 sym">mySavedManager</span>.getEntryList());'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 40,
                                                                                                               u'endOffset': 67,
                                                                                                               u'startLine': 40,
                                                                                                               u'startOffset': 60}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/frontend/SLOGOScreen.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'    <span class="k">private</span> <span class="sym-3 sym">List</span>&lt;GridPane&gt; <span class="sym-30 sym">myUIPaneList</span> = <span class="k">new</span> <span class="sym-1 sym">ArrayList</span>&lt;GridPane&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 46,
                                                                                                               u'endOffset': 65,
                                                                                                               u'startLine': 46,
                                                                                                               u'startOffset': 55}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/frontend/SLOGOScreen.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\t<span class="sym-5 sym">timeline</span> = <span class="k">new</span> <span class="sym-1 sym">ArrayList</span>&lt;TurtleAction&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 32,
                                                                                                               u'endOffset': 40,
                                                                                                               u'startLine': 32,
                                                                                                               u'startOffset': 26}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/AnimationController.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'            <span class="k">new</span> HashMap&lt;String, TurtleInterface&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 54,
                                                                                                               u'endOffset': 48,
                                                                                                               u'startLine': 54,
                                                                                                               u'startOffset': 23}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'            <span class="k">new</span> HashMap&lt;String, MultiTurtleInterface&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 56,
                                                                                                               u'endOffset': 53,
                                                                                                               u'startLine': 56,
                                                                                                               u'startOffset': 23}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'    <span class="k">private</span> Map&lt;String, DisplayInterface&gt; <span class="sym-49 sym">displayInstructions</span> = <span class="k">new</span> HashMap&lt;String, DisplayInterface&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 57,
                                                                                                               u'endOffset': 101,
                                                                                                               u'startLine': 57,
                                                                                                               u'startOffset': 75}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'        Set&lt;Integer&gt; <span class="sym-84 sym">currentTurtles</span> = <span class="k">new</span> HashSet&lt;Integer&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 158,
                                                                                                               u'endOffset': 58,
                                                                                                               u'startLine': 158,
                                                                                                               u'startOffset': 49}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\t<span class="sym-2 sym">List</span>&lt;Integer&gt; <span class="sym-15 sym">paramArray</span> = <span class="k">new</span> <span class="sym-1 sym">ArrayList</span>&lt;Integer&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 23,
                                                                                                               u'endOffset': 51,
                                                                                                               u'startLine': 23,
                                                                                                               u'startOffset': 42}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/TurtleAsk.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\t<span class="sym-2 sym">Set</span>&lt;Double&gt; <span class="sym-12 sym">currentTurtles</span> = <span class="k">new</span> <span class="sym-1 sym">HashSet</span>&lt;Double&gt;();'],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 14,
                                                                                                               u'endOffset': 50,
                                                                                                               u'startLine': 14,
                                                                                                               u'startOffset': 42}}],
                                                                              'message': u'Replace the type specification in this constructor call with the diamond operator ("<>").',
                                                                              'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/TurtleTellMulti.java'],
                                                                              'rule': u'The diamond operator ("<>") should be used',
                                                                              'severity': 'low'}]},
                                       u'Meaningful names': {   'category description': u'Meaningful names: give variables, methods, classes, and packages non-abbreviated, intention-revealing names',
                                                                'detail': [   {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'<span class="k">public</span> <span class="k">class</span> <span class="sym-1 sym">testthree</span> {'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 1,
                                                                                                                   u'endOffset': 22,
                                                                                                                   u'startLine': 1,
                                                                                                                   u'startOffset': 13}}],
                                                                                  'message': u"Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.",
                                                                                  'path': [   u'duke-compsci308:test-xu:src/testthree.java'],
                                                                                  'rule': u'Class names should comply with a naming convention',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'<span class="k">public</span> <span class="k">class</span> <span class="sym-1 sym">testtwo</span> {'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 1,
                                                                                                                   u'endOffset': 20,
                                                                                                                   u'startLine': 1,
                                                                                                                   u'startOffset': 13}}],
                                                                                  'message': u"Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.",
                                                                                  'path': [   u'duke-compsci308:test-xu:src/testtwo.java'],
                                                                                  'rule': u'Class names should comply with a naming convention',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'<span class="k">public</span> <span class="k">class</span> <span class="sym-1 sym">testone</span> {'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 1,
                                                                                                                   u'endOffset': 20,
                                                                                                                   u'startLine': 1,
                                                                                                                   u'startOffset': 13}}],
                                                                                  'message': u"Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.",
                                                                                  'path': [   u'duke-compsci308:test-xu:src/testone.java'],
                                                                                  'rule': u'Class names should comply with a naming convention',
                                                                                  'severity': 'low'}]},
                                       u'No magic values': {   'category description': u'No magic values: use constants for all values used multiple times or in program logic',
                                                               'detail': [   {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'        <span class="k">int</span> <span class="sym-6 sym">aa</span> = <span class="c">1</span> * <span class="c">99</span> * <span class="c">1000000</span>;'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 9,
                                                                                                                  u'endOffset': 33,
                                                                                                                  u'startLine': 9,
                                                                                                                  u'startOffset': 26}}],
                                                                                 'message': u'Assign this magic number 1000000 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/testone.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'        <span class="k">int</span> <span class="sym-10 sym">aa</span> = <span class="c">1</span> * <span class="c">99</span> * <span class="c">1000000</span>;'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 19,
                                                                                                                  u'endOffset': 23,
                                                                                                                  u'startLine': 19,
                                                                                                                  u'startOffset': 21}}],
                                                                                 'message': u'Assign this magic number 99 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/testone.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'        <span class="k">int</span> <span class="sym-10 sym">aa</span> = <span class="c">1</span> * <span class="c">99</span> * <span class="c">1000000</span>;'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 19,
                                                                                                                  u'endOffset': 33,
                                                                                                                  u'startLine': 19,
                                                                                                                  u'startOffset': 26}}],
                                                                                 'message': u'Assign this magic number 1000000 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/testone.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'        <span class="k">int</span> <span class="sym-6 sym">aa</span> = <span class="c">1</span> * <span class="c">99</span> * <span class="c">1000000</span>;'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 9,
                                                                                                                  u'endOffset': 23,
                                                                                                                  u'startLine': 9,
                                                                                                                  u'startOffset': 21}}],
                                                                                 'message': u'Assign this magic number 99 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/testone.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'\t\t<span class="k">if</span> (<span class="sym-15 sym">myParametersMap</span>.getNumParams(<span class="sym-67 sym">commandPiece</span>) &lt; <span class="c">2</span> || <span class="sym-66 sym">commandPieces</span>.length &lt; <span class="c">3</span>) {'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 135,
                                                                                                                  u'endOffset': 80,
                                                                                                                  u'startLine': 135,
                                                                                                                  u'startOffset': 79}}],
                                                                                 'message': u'Assign this magic number 3 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'\t\t<span class="sym-4 sym">myParamMap</span>.put(<span class="s">"SetPalette"</span>, <span class="c">4</span>);'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 63,
                                                                                                                  u'endOffset': 32,
                                                                                                                  u'startLine': 63,
                                                                                                                  u'startOffset': 31}}],
                                                                                 'message': u'Assign this magic number 4 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/backend/ParametersMap.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'        <span class="k">this</span>.setTooltip(<span class="k">new</span> Tooltip(<span class="s">" [r="</span> + (<span class="k">int</span>) (<span class="sym-9 sym">col</span>.getRed() * <span class="c">255</span>) + <span class="s">",b="</span> +'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 39,
                                                                                                                  u'endOffset': 70,
                                                                                                                  u'startLine': 39,
                                                                                                                  u'startOffset': 67}}],
                                                                                 'message': u'Assign this magic number 255 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/ColorDisplayCell.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'                                    (<span class="k">int</span>) (<span class="sym-9 sym">col</span>.getBlue() * <span class="c">255</span>) + <span class="s">",g="</span> +'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 40,
                                                                                                                  u'endOffset': 62,
                                                                                                                  u'startLine': 40,
                                                                                                                  u'startOffset': 59}}],
                                                                                 'message': u'Assign this magic number 255 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/ColorDisplayCell.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'                                    (<span class="k">int</span>) (<span class="sym-9 sym">col</span>.getGreen() * <span class="c">255</span>) + <span class="s">"]"</span>));'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 41,
                                                                                                                  u'endOffset': 63,
                                                                                                                  u'startLine': 41,
                                                                                                                  u'startOffset': 60}}],
                                                                                 'message': u'Assign this magic number 255 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/ColorDisplayCell.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'        <span class="sym-25 sym">myGridPane</span>.add(<span class="sym-34 sym">myCommandLine</span>.getTextField(), <span class="c">1</span>, <span class="c">2</span>, <span class="c">1</span>, <span class="c">6</span>);'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 157,
                                                                                                                  u'endOffset': 63,
                                                                                                                  u'startLine': 157,
                                                                                                                  u'startOffset': 62}}],
                                                                                 'message': u'Assign this magic number 6 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'                     <span class="c">2</span>, <span class="c">6</span>, <span class="c">3</span>, <span class="c">6</span>);'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 161,
                                                                                                                  u'endOffset': 25,
                                                                                                                  u'startLine': 161,
                                                                                                                  u'startOffset': 24}}],
                                                                                 'message': u'Assign this magic number 6 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'                     <span class="c">2</span>, <span class="c">6</span>, <span class="c">3</span>, <span class="c">6</span>);'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 161,
                                                                                                                  u'endOffset': 28,
                                                                                                                  u'startLine': 161,
                                                                                                                  u'startOffset': 27}}],
                                                                                 'message': u'Assign this magic number 3 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'                     <span class="c">2</span>, <span class="c">6</span>, <span class="c">3</span>, <span class="c">6</span>);'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 161,
                                                                                                                  u'endOffset': 31,
                                                                                                                  u'startLine': 161,
                                                                                                                  u'startOffset': 30}}],
                                                                                 'message': u'Assign this magic number 6 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'                     <span class="c">2</span>, <span class="c">1</span>, <span class="c">2</span>, <span class="c">5</span>);'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 164,
                                                                                                                  u'endOffset': 31,
                                                                                                                  u'startLine': 164,
                                                                                                                  u'startOffset': 30}}],
                                                                                 'message': u'Assign this magic number 5 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'\t<span class="k">private</span> <span class="k">static</span> <span class="k">double</span> <span class="sym-9 sym">INITIAL_TURN_SPEED</span> = <span class="c">5</span>;'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 28,
                                                                                                                  u'endOffset': 45,
                                                                                                                  u'startLine': 28,
                                                                                                                  u'startOffset': 44}}],
                                                                                 'message': u'Assign this magic number 5 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/AnimationController.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'        <span class="k">double</span> <span class="sym-56 sym">deltaX</span> = Math.sin(<span class="sym-78 sym">getTurtleAngle</span>() * Math.PI / <span class="c">180</span>) * <span class="sym-55 sym">length</span>;'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 137,
                                                                                                                  u'endOffset': 65,
                                                                                                                  u'startLine': 137,
                                                                                                                  u'startOffset': 62}}],
                                                                                 'message': u'Assign this magic number 180 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/SingleTurtle.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'        <span class="k">double</span> <span class="sym-57 sym">deltaY</span> = Math.cos(<span class="sym-78 sym">getTurtleAngle</span>() * Math.PI / <span class="c">180</span>) * <span class="sym-55 sym">length</span>;'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 138,
                                                                                                                  u'endOffset': 65,
                                                                                                                  u'startLine': 138,
                                                                                                                  u'startOffset': 62}}],
                                                                                 'message': u'Assign this magic number 180 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/SingleTurtle.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'    <span class="k">private</span> <span class="k">double</span> <span class="sym-11 sym">rgb</span> = <span class="c">255</span>;'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 16,
                                                                                                                  u'endOffset': 28,
                                                                                                                  u'startLine': 16,
                                                                                                                  u'startOffset': 25}}],
                                                                                 'message': u'Assign this magic number 255 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/DisplaySetPalette.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'\t\t    <span class="sym-17 sym">colorManager</span>.set((<span class="k">int</span>)<span class="sym-13 sym">args</span>[<span class="c">0</span>],<span class="k">new</span> Color(<span class="sym-13 sym">args</span>[<span class="c">1</span>]/<span class="sym-11 sym">rgb</span>,<span class="sym-13 sym">args</span>[<span class="c">2</span>]/<span class="sym-11 sym">rgb</span>,<span class="sym-13 sym">args</span>[<span class="c">3</span>]/<span class="sym-11 sym">rgb</span>,<span class="c">1.0</span>));'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 21,
                                                                                                                  u'endOffset': 76,
                                                                                                                  u'startLine': 21,
                                                                                                                  u'startOffset': 75}}],
                                                                                 'message': u'Assign this magic number 3 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/DisplaySetPalette.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'\t\t<span class="k">return</span> (<span class="k">int</span>) (Math.random()*<span class="c">6</span>) + <span class="c">1</span>;'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 15,
                                                                                                                  u'endOffset': 31,
                                                                                                                  u'startLine': 15,
                                                                                                                  u'startOffset': 30}}],
                                                                                 'message': u'Assign this magic number 6 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/DisplayShape.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'\t\t<span class="k">if</span> ( <span class="sym-21 sym">loopStuff</span>.length != <span class="c">4</span>) {'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 37,
                                                                                                                  u'endOffset': 28,
                                                                                                                  u'startLine': 37,
                                                                                                                  u'startOffset': 27}}],
                                                                                 'message': u'Assign this magic number 4 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'\t\t\t<span class="k">int</span> <span class="sym-24 sym">increment</span> = Integer.parseInt(<span class="sym-21 sym">loopStuff</span>[<span class="c">3</span>]);'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 44,
                                                                                                                  u'endOffset': 47,
                                                                                                                  u'startLine': 44,
                                                                                                                  u'startOffset': 46}}],
                                                                                 'message': u'Assign this magic number 3 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'\t\t<span class="k">if</span> (<span class="sym-14 sym">commandPieces</span>.length != <span class="c">3</span>) {'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 17,
                                                                                                                  u'endOffset': 31,
                                                                                                                  u'startLine': 17,
                                                                                                                  u'startOffset': 30}}],
                                                                                 'message': u'Assign this magic number 3 to a well-named constant, and use the constant instead.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedMakeVariable.java'],
                                                                                 'rule': u'Magic numbers should not be used',
                                                                                 'severity': 'medium'}]},
                                       u'No warning': {   'category description': u'Code should contain no warnings from Java compiler or CheckStyle',
                                                          'detail': [   {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'<span class="k">import</span> frontend.*;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 3,
                                                                                                             u'endOffset': 17,
                                                                                                             u'startLine': 3,
                                                                                                             u'startOffset': 7}}],
                                                                            'message': u'Explicitly import the specific classes needed.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/Main.java'],
                                                                            'rule': u'Wildcard imports should not be used',
                                                                            'severity': 'high'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'<span class="k">import</span> java.util.*;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 4,
                                                                                                             u'endOffset': 18,
                                                                                                             u'startLine': 4,
                                                                                                             u'startOffset': 7}}],
                                                                            'message': u'Explicitly import the specific classes needed.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                            'rule': u'Wildcard imports should not be used',
                                                                            'severity': 'high'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'<span class="k">import</span> frontend.*;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 16,
                                                                                                             u'endOffset': 17,
                                                                                                             u'startLine': 16,
                                                                                                             u'startOffset': 7}}],
                                                                            'message': u'Explicitly import the specific classes needed.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                            'rule': u'Wildcard imports should not be used',
                                                                            'severity': 'high'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'\t\t<span class="k">if</span>(<span class="sym-150 sym">count</span> == <span class="c">0</span>){'],
                                                                                            u'textRange': {   u'endLine': 368,
                                                                                                              u'endOffset': 4,
                                                                                                              u'startLine': 368,
                                                                                                              u'startOffset': 2}}],
                                                                            'message': u'Merge this if statement with the enclosing one.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                            'rule': u'Collapsible "if" statements should be merged',
                                                                            'severity': 'medium'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'\t\t\tString <span class="sym-164 sym">desiredCommand</span> = <span class="sym-167 sym">getDesiredCommand</span>(<span class="sym-163 sym">properties</span>,<span class="sym-163 sym">properties</span>.keys(),<span class="sym-161 sym">command</span>);'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 404,
                                                                                                             u'endOffset': 82,
                                                                                                             u'startLine': 404,
                                                                                                             u'startOffset': 27}}],
                                                                            'message': u'Immediately return this expression instead of assigning it to the temporary variable "desiredCommand".',
                                                                            'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                            'rule': u'Local Variables should not be declared and then immediately returned or thrown',
                                                                            'severity': 'low'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'<span class="k">import</span> methodinterfaces.*;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 6,
                                                                                                             u'endOffset': 25,
                                                                                                             u'startLine': 6,
                                                                                                             u'startOffset': 7}}],
                                                                            'message': u'Explicitly import the specific classes needed.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/backend/Commands.java'],
                                                                            'rule': u'Wildcard imports should not be used',
                                                                            'severity': 'high'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'<span class="k">import</span> java.util.*;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 3,
                                                                                                             u'endOffset': 18,
                                                                                                             u'startLine': 3,
                                                                                                             u'startOffset': 7}}],
                                                                            'message': u'Explicitly import the specific classes needed.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/backend/ParseNode.java'],
                                                                            'rule': u'Wildcard imports should not be used',
                                                                            'severity': 'high'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'<span class="k">import</span> java.util.*;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 3,
                                                                                                             u'endOffset': 18,
                                                                                                             u'startLine': 3,
                                                                                                             u'startOffset': 7}}],
                                                                            'message': u'Explicitly import the specific classes needed.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/backend/UserDefinedCommands.java'],
                                                                            'rule': u'Wildcard imports should not be used',
                                                                            'severity': 'high'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'<span class="k">import</span> methodinterfaces.*;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 7,
                                                                                                             u'endOffset': 25,
                                                                                                             u'startLine': 7,
                                                                                                             u'startOffset': 7}}],
                                                                            'message': u'Explicitly import the specific classes needed.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/backend/UserDefinedCommands.java'],
                                                                            'rule': u'Wildcard imports should not be used',
                                                                            'severity': 'high'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'<span class="k">import</span> java.util.*;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 4,
                                                                                                             u'endOffset': 18,
                                                                                                             u'startLine': 4,
                                                                                                             u'startOffset': 7}}],
                                                                            'message': u'Explicitly import the specific classes needed.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/frontend/ColorPaletteView.java'],
                                                                            'rule': u'Wildcard imports should not be used',
                                                                            'severity': 'high'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'<span class="k">import</span> java.util.*;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 4,
                                                                                                             u'endOffset': 18,
                                                                                                             u'startLine': 4,
                                                                                                             u'startOffset': 7}}],
                                                                            'message': u'Explicitly import the specific classes needed.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/frontend/ShapePaletteView.java'],
                                                                            'rule': u'Wildcard imports should not be used',
                                                                            'severity': 'high'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'<span class="k">import</span> java.util.*;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 3,
                                                                                                             u'endOffset': 18,
                                                                                                             u'startLine': 3,
                                                                                                             u'startOffset': 7}}],
                                                                            'message': u'Explicitly import the specific classes needed.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java'],
                                                                            'rule': u'Wildcard imports should not be used',
                                                                            'severity': 'high'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'    <span class="k">private</span> ObjectProperty&lt;Image&gt; <span class="sym-50 sym">defaultTurtleImage</span>;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 58,
                                                                                                             u'endOffset': 52,
                                                                                                             u'startLine': 58,
                                                                                                             u'startOffset': 34}}],
                                                                            'message': u'Remove this unused "defaultTurtleImage" private field.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java'],
                                                                            'rule': u'Unused "private" fields should be removed',
                                                                            'severity': 'medium'},
                                                                        {   'author': u'chengkang.xu@duke.edu',
                                                                            'code': [   {   'code': [   u'\t<span class="k">private</span> <span class="k">double</span> <span class="sym-2 sym">startAngle</span>;'],
                                                                                            'msg': '',
                                                                                            'textRange': {   u'endLine': 11,
                                                                                                             u'endOffset': 26,
                                                                                                             u'startLine': 11,
                                                                                                             u'startOffset': 16}}],
                                                                            'message': u'Remove this unused "startAngle" private field.',
                                                                            'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/TurnTurtleAction.java'],
                                                                            'rule': u'Unused "private" fields should be removed',
                                                                            'severity': 'medium'}]},
                                       u'Readable code': {   'category description': u'Write readable code instead of comments: use comments only to explain important design decisions or purpose of code, not to restate code logic',
                                                             'detail': [   {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t<span class="k">if</span> (<span class="sym-64 sym">m</span>.find())'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 127,
                                                                                                                u'endOffset': 4,
                                                                                                                u'startLine': 127,
                                                                                                                u'startOffset': 2}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'        <span class="k">else</span>'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 152,
                                                                                                                u'endOffset': 12,
                                                                                                                u'startLine': 152,
                                                                                                                u'startOffset': 8}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/frontend/turtle/SingleTurtle.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t<span class="k">if</span> (<span class="sym-5 sym">display</span>.isTurtlePenDown())'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 9,
                                                                                                                u'endOffset': 4,
                                                                                                                u'startLine': 9,
                                                                                                                u'startOffset': 2}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/TurtleIsPenDown.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t<span class="k">if</span> (<span class="sym-5 sym">display</span>.getTurtleVisibility())'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 9,
                                                                                                                u'endOffset': 4,
                                                                                                                u'startLine': 9,
                                                                                                                u'startOffset': 2}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/TurtleIsShowing.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t<span class="k">if</span> (<span class="sym-18 sym">m</span>.find())'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 21,
                                                                                                                u'endOffset': 4,
                                                                                                                u'startLine': 21,
                                                                                                                u'startOffset': 2}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedDoTimes.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t\t<span class="k">if</span> ( <span class="sym-12 sym">userDefinedCommands</span>.contains(<span class="sym-11 sym">parser</span>.parseCommand(<span class="sym-20 sym">newCommand</span>.split(<span class="s">"\\\\s+"</span>)[<span class="c">0</span>])))'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 30,
                                                                                                                u'endOffset': 5,
                                                                                                                u'startLine': 30,
                                                                                                                u'startOffset': 3}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedDoTimes.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t<span class="k">if</span> (<span class="sym-18 sym">m</span>.find())'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 20,
                                                                                                                u'endOffset': 4,
                                                                                                                u'startLine': 20,
                                                                                                                u'startOffset': 2}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t\t<span class="k">if</span> ( <span class="sym-12 sym">userDefinedCommands</span>.contains(<span class="sym-11 sym">parser</span>.parseCommand(<span class="sym-20 sym">newCommand</span>.split(<span class="s">"\\\\s+"</span>)[<span class="c">0</span>])))'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 29,
                                                                                                                u'endOffset': 5,
                                                                                                                u'startLine': 29,
                                                                                                                u'startOffset': 3}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t\t\t<span class="k">if</span> ( <span class="sym-11 sym">userDefinedCommands</span>.contains(<span class="sym-10 sym">parser</span>.parseCommand(<span class="sym-20 sym">newCommand</span>.split(<span class="s">"\\\\s+"</span>)[<span class="c">0</span>])))'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 25,
                                                                                                                u'endOffset': 6,
                                                                                                                u'startLine': 25,
                                                                                                                u'startOffset': 4}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t\t<span class="k">if</span> ( <span class="sym-17 sym">expr</span> != <span class="c">0</span> )'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 32,
                                                                                                                u'endOffset': 5,
                                                                                                                u'startLine': 32,
                                                                                                                u'startOffset': 3}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t\t<span class="k">else</span>'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 34,
                                                                                                                u'endOffset': 7,
                                                                                                                u'startLine': 34,
                                                                                                                u'startOffset': 3}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t\t\t<span class="k">if</span> ( <span class="sym-10 sym">userDefinedCommands</span>.contains(<span class="sym-9 sym">parser</span>.parseCommand(<span class="sym-19 sym">newTrueCommand</span>.split(<span class="s">"\\\\s+"</span>)[<span class="c">0</span>])))'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 24,
                                                                                                                u'endOffset': 6,
                                                                                                                u'startLine': 24,
                                                                                                                u'startOffset': 4}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t\t\t<span class="k">if</span> ( <span class="sym-10 sym">userDefinedCommands</span>.contains(<span class="sym-9 sym">parser</span>.parseCommand(<span class="sym-20 sym">newFalseCommand</span>.split(<span class="s">"\\\\s+"</span>)[<span class="c">0</span>])))'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 34,
                                                                                                                u'endOffset': 6,
                                                                                                                u'startLine': 34,
                                                                                                                u'startOffset': 4}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t\t<span class="k">if</span> ( <span class="sym-16 sym">expr</span> != <span class="c">0</span> )'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 41,
                                                                                                                u'endOffset': 5,
                                                                                                                u'startLine': 41,
                                                                                                                u'startOffset': 3}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t\t<span class="k">else</span>'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 43,
                                                                                                                u'endOffset': 7,
                                                                                                                u'startLine': 43,
                                                                                                                u'startOffset': 3}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'},
                                                                           {   'author': u'chengkang.xu@duke.edu',
                                                                               'code': [   {   'code': [   u'\t\t\t\t<span class="k">if</span> ( <span class="sym-12 sym">userDefinedCommands</span>.contains(<span class="sym-11 sym">parser</span>.parseCommand(<span class="sym-21 sym">newCommand</span>.split(<span class="s">"\\\\s+"</span>)[<span class="c">0</span>])))'],
                                                                                               'msg': '',
                                                                                               'textRange': {   u'endLine': 25,
                                                                                                                u'endOffset': 6,
                                                                                                                u'startLine': 25,
                                                                                                                u'startOffset': 4}}],
                                                                               'message': u'Missing curly brace.',
                                                                               'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedRepeat.java'],
                                                                               'rule': u'Control structures should use curly braces',
                                                                               'severity': 'high'}]},
                                       u'Same level code': {   'category description': u"At all points, code should be 'at the same level' (try not to mix method calls and low-level if logic in same method)",
                                                               'detail': []},
                                       u'Use scope wisely': {   'category description': u'Use scope wisely: variables should be declared as close as possible to where they are used',
                                                                'detail': [   {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'\t\t<span class="k">int</span> <span class="sym-75 sym">endBracket</span> = <span class="sym-73 sym">command</span>.lastIndexOf(<span class="s">\']\'</span>);'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 156,
                                                                                                                   u'endOffset': 16,
                                                                                                                   u'startLine': 156,
                                                                                                                   u'startOffset': 6}}],
                                                                                  'message': u'Move the declaration of "endBracket" closer to the code that uses it.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                                  'rule': u'Variables should not be declared before they are relevant',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'\t\t<span class="sym-7 sym">Map</span>&lt;String, String&gt; <span class="sym-92 sym">paramToNum</span> = <span class="k">new</span> HashMap&lt;String, String&gt;();'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 200,
                                                                                                                   u'endOffset': 32,
                                                                                                                   u'startLine': 200,
                                                                                                                   u'startOffset': 22}}],
                                                                                  'message': u'Move the declaration of "paramToNum" closer to the code that uses it.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                                  'rule': u'Variables should not be declared before they are relevant',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'\t\t\t<span class="k">int</span> <span class="sym-120 sym">size</span> = <span class="sym-118 sym">instructions</span>.size() - <span class="c">1</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 275,
                                                                                                                   u'endOffset': 11,
                                                                                                                   u'startLine': 275,
                                                                                                                   u'startOffset': 7}}],
                                                                                  'message': u'Move the declaration of "size" closer to the code that uses it.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                                  'rule': u'Variables should not be declared before they are relevant',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'\t\t\t<span class="k">int</span> <span class="sym-17 sym">expr</span> = Integer.parseInt(<span class="sym-16 sym">commandPieces</span>[<span class="c">1</span>]);'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 19,
                                                                                                                   u'endOffset': 11,
                                                                                                                   u'startLine': 19,
                                                                                                                   u'startOffset': 7}}],
                                                                                  'message': u'Move the declaration of "expr" closer to the code that uses it.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java'],
                                                                                  'rule': u'Variables should not be declared before they are relevant',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'\t\t\t<span class="k">int</span> <span class="sym-16 sym">expr</span> = Integer.parseInt(<span class="sym-15 sym">commandPieces</span>[<span class="c">1</span>]);'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 18,
                                                                                                                   u'endOffset': 11,
                                                                                                                   u'startLine': 18,
                                                                                                                   u'startOffset': 7}}],
                                                                                  'message': u'Move the declaration of "expr" closer to the code that uses it.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java'],
                                                                                  'rule': u'Variables should not be declared before they are relevant',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'\t\t\t<span class="k">int</span> <span class="sym-18 sym">expr</span> = Integer.parseInt(<span class="sym-17 sym">commandPieces</span>[<span class="c">1</span>]);'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 19,
                                                                                                                   u'endOffset': 11,
                                                                                                                   u'startLine': 19,
                                                                                                                   u'startOffset': 7}}],
                                                                                  'message': u'Move the declaration of "expr" closer to the code that uses it.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedRepeat.java'],
                                                                                  'rule': u'Variables should not be declared before they are relevant',
                                                                                  'severity': 'low'}]}},
                 'Duplications': [   {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);'],
                                                         u'msg': u'Duplication',
                                                         u'textRange': {   u'endLine': 24,
                                                                           u'endOffset': 43,
                                                                           u'startLine': 24,
                                                                           u'startOffset': 21}},
                                                     {   'code': [   u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);'],
                                                         u'msg': u'Duplication',
                                                         u'textRange': {   u'endLine': 34,
                                                                           u'endOffset': 43,
                                                                           u'startLine': 34,
                                                                           u'startOffset': 21}},
                                                     {   'code': [   u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);'],
                                                         u'msg': u'Duplication',
                                                         u'textRange': {   u'endLine': 39,
                                                                           u'endOffset': 43,
                                                                           u'startLine': 39,
                                                                           u'startOffset': 21}},
                                                     {   'code': [   u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);'],
                                                         u'msg': u'Duplication',
                                                         u'textRange': {   u'endLine': 57,
                                                                           u'endOffset': 43,
                                                                           u'startLine': 57,
                                                                           u'startOffset': 21}}],
                                         'message': u'Define a constant instead of duplicating this literal "Not a Valid Command!" 4 times.',
                                         'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedDoTimes.java'],
                                         'rule': u'String literals should not be duplicated',
                                         'severity': 'high'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);'],
                                                         u'msg': u'Duplication',
                                                         u'textRange': {   u'endLine': 23,
                                                                           u'endOffset': 43,
                                                                           u'startLine': 23,
                                                                           u'startOffset': 21}},
                                                     {   'code': [   u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);'],
                                                         u'msg': u'Duplication',
                                                         u'textRange': {   u'endLine': 33,
                                                                           u'endOffset': 43,
                                                                           u'startLine': 33,
                                                                           u'startOffset': 21}},
                                                     {   'code': [   u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);'],
                                                         u'msg': u'Duplication',
                                                         u'textRange': {   u'endLine': 38,
                                                                           u'endOffset': 43,
                                                                           u'startLine': 38,
                                                                           u'startOffset': 21}},
                                                     {   'code': [   u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);'],
                                                         u'msg': u'Duplication',
                                                         u'textRange': {   u'endLine': 58,
                                                                           u'endOffset': 43,
                                                                           u'startLine': 58,
                                                                           u'startOffset': 21}}],
                                         'message': u'Define a constant instead of duplicating this literal "Not a Valid Command!" 4 times.',
                                         'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java'],
                                         'rule': u'String literals should not be duplicated',
                                         'severity': 'high'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'code': [   {   'code': [   u'\t\t\t\t<span class="sym-9 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);'],
                                                         u'msg': u'Duplication',
                                                         u'textRange': {   u'endLine': 28,
                                                                           u'endOffset': 44,
                                                                           u'startLine': 28,
                                                                           u'startOffset': 22}},
                                                     {   'code': [   u'\t\t\t\t<span class="sym-9 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);'],
                                                         u'msg': u'Duplication',
                                                         u'textRange': {   u'endLine': 38,
                                                                           u'endOffset': 44,
                                                                           u'startLine': 38,
                                                                           u'startOffset': 22}},
                                                     {   'code': [   u'\t\t\t<span class="sym-9 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);'],
                                                         u'msg': u'Duplication',
                                                         u'textRange': {   u'endLine': 46,
                                                                           u'endOffset': 43,
                                                                           u'startLine': 46,
                                                                           u'startOffset': 21}}],
                                         'message': u'Define a constant instead of duplicating this literal "Not a Valid Command!" 3 times.',
                                         'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java'],
                                         'rule': u'String literals should not be duplicated',
                                         'severity': 'high'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'duplications': [   [   {   'code': [   u'\t\t<span class="k">else</span> {',
                                                                                 u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);',
                                                                                 u'\t\t\t<span class="k">return</span>;',
                                                                                 u'\t\t}',
                                                                                 u'\t\tString <span class="sym-20 sym">newCommand</span> = <span class="s">""</span>;',
                                                                                 u'\t\t<span class="k">if</span> (<span class="sym-18 sym">m</span>.find()) {',
                                                                                 u'\t\t\t<span class="sym-20 sym">newCommand</span> = <span class="sym-18 sym">m</span>.group(<span class="c">1</span>);',
                                                                                 u'\t\t\t<span class="k">if</span> ( <span class="sym-12 sym">userDefinedCommands</span>.contains(<span class="sym-11 sym">parser</span>.parseCommand(<span class="sym-20 sym">newCommand</span>.split(<span class="s">"\\\\s+"</span>)[<span class="c">0</span>])))',
                                                                                 u'\t\t\t\t<span class="sym-20 sym">newCommand</span> = <span class="sym-20 sym">newCommand</span> + <span class="s">"]"</span>;',
                                                                                 u'\t\t}',
                                                                                 u'\t\t<span class="k">else</span> {',
                                                                                 u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);',
                                                                                 u'\t\t\t<span class="k">return</span>;'],
                                                                     'endLine': 35,
                                                                     'loc': u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedDoTimes.java',
                                                                     'startLine': 23},
                                                                 {   'code': [   u'\t\t<span class="k">else</span> {',
                                                                                 u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);',
                                                                                 u'\t\t\t<span class="k">return</span>;',
                                                                                 u'\t\t}',
                                                                                 u'\t\tString <span class="sym-20 sym">newCommand</span> = <span class="s">""</span>;',
                                                                                 u'\t\t<span class="k">if</span> (<span class="sym-18 sym">m</span>.find()) {',
                                                                                 u'\t\t\t<span class="sym-20 sym">newCommand</span> = <span class="sym-18 sym">m</span>.group(<span class="c">1</span>);',
                                                                                 u'\t\t\t<span class="k">if</span> ( <span class="sym-12 sym">userDefinedCommands</span>.contains(<span class="sym-11 sym">parser</span>.parseCommand(<span class="sym-20 sym">newCommand</span>.split(<span class="s">"\\\\s+"</span>)[<span class="c">0</span>])))',
                                                                                 u'\t\t\t\t<span class="sym-20 sym">newCommand</span> = <span class="sym-20 sym">newCommand</span> + <span class="s">"]"</span>;',
                                                                                 u'\t\t}',
                                                                                 u'\t\t<span class="k">else</span> {',
                                                                                 u'\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);',
                                                                                 u'\t\t\t<span class="k">return</span>;'],
                                                                     'endLine': 34,
                                                                     'loc': u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java',
                                                                     'startLine': 22}]],
                                         'message': u'1 duplicated blocks of code must be removed.',
                                         'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedDoTimes.java'],
                                         'rule': u'Source files should not have any duplicated blocks',
                                         'severity': 'medium'},
                                     {   'author': u'chengkang.xu@duke.edu',
                                         'duplications': [   [   {   'code': [   u'\t<span class="a">@Override</span>',
                                                                                 u'\t<span class="k">public</span> <span class="k">void</span> <span class="sym-8 sym">executeCommand</span>(String <span class="sym-9 sym">command</span>, CommandParser <span class="sym-10 sym">parser</span>, <span class="sym-1 sym">List</span>&lt;String&gt; <span class="sym-11 sym">userDefinedCommands</span>,',
                                                                                 u'\t\t\tEntryManager <span class="sym-12 sym">terminal</span>, EntryManager <span class="sym-13 sym">commandManager</span>, ',
                                                                                 u'\t\t\tEntryManager <span class="sym-14 sym">workspace</span>, <span class="k">boolean</span> <span class="sym-15 sym">read</span>) {',
                                                                                 u'\t\tString[] <span class="sym-16 sym">commandPieces</span> = <span class="sym-9 sym">command</span>.split(<span class="s">"\\\\s+"</span>);',
                                                                                 u'\t\t<span class="k">try</span> {',
                                                                                 u'\t\t\t<span class="k">int</span> <span class="sym-17 sym">expr</span> = Integer.parseInt(<span class="sym-16 sym">commandPieces</span>[<span class="c">1</span>]);',
                                                                                 u'\t\t\t<span class="sym-3 sym">Pattern</span> <span class="sym-18 sym">p</span> = <span class="sym-3 sym">Pattern</span>.compile(<span class="s">"\\\\[(.*?)\\\\]"</span>);',
                                                                                 u'\t\t\t<span class="sym-2 sym">Matcher</span> <span class="sym-19 sym">m</span> = <span class="sym-18 sym">p</span>.matcher(<span class="sym-9 sym">command</span>);',
                                                                                 u'\t\t\tString <span class="sym-20 sym">newCommand</span> = <span class="s">""</span>;',
                                                                                 u'\t\t\t<span class="k">if</span> (<span class="sym-19 sym">m</span>.find()) {',
                                                                                 u'\t\t\t\t<span class="sym-20 sym">newCommand</span> = <span class="sym-19 sym">m</span>.group(<span class="c">1</span>);',
                                                                                 u'\t\t\t\t<span class="k">if</span> ( <span class="sym-11 sym">userDefinedCommands</span>.contains(<span class="sym-10 sym">parser</span>.parseCommand(<span class="sym-20 sym">newCommand</span>.split(<span class="s">"\\\\s+"</span>)[<span class="c">0</span>])))',
                                                                                 u'\t\t\t\t\t<span class="sym-20 sym">newCommand</span> = <span class="sym-20 sym">newCommand</span> + <span class="s">"]"</span>;',
                                                                                 u'\t\t\t}',
                                                                                 u'\t\t\t<span class="k">else</span> {',
                                                                                 u'\t\t\t\t<span class="sym-10 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);',
                                                                                 u'\t\t\t\t<span class="k">return</span>;'],
                                                                     'endLine': 30,
                                                                     'loc': u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java',
                                                                     'startLine': 13},
                                                                 {   'code': [   u'\t<span class="a">@Override</span>',
                                                                                 u'\t<span class="k">public</span> <span class="k">void</span> <span class="sym-9 sym">executeCommand</span>(String <span class="sym-10 sym">command</span>, CommandParser <span class="sym-11 sym">parser</span>, <span class="sym-1 sym">List</span>&lt;String&gt; <span class="sym-12 sym">userDefinedCommands</span>, EntryManager <span class="sym-13 sym">terminal</span>, EntryManager <span class="sym-14 sym">commandManager</span>,',
                                                                                 u'\t\t\tEntryManager <span class="sym-15 sym">workspace</span>, <span class="k">boolean</span> <span class="sym-16 sym">read</span>) {',
                                                                                 u'\t\tString[] <span class="sym-17 sym">commandPieces</span> = <span class="sym-10 sym">command</span>.split(<span class="s">"\\\\s+"</span>);',
                                                                                 u'\t\t<span class="k">try</span> {',
                                                                                 u'\t\t\t<span class="k">int</span> <span class="sym-18 sym">expr</span> = Integer.parseInt(<span class="sym-17 sym">commandPieces</span>[<span class="c">1</span>]);',
                                                                                 u'\t\t\t<span class="sym-3 sym">Pattern</span> <span class="sym-19 sym">p</span> = <span class="sym-3 sym">Pattern</span>.compile(<span class="s">"\\\\[(.*?)\\\\]"</span>);',
                                                                                 u'\t\t\t<span class="sym-2 sym">Matcher</span> <span class="sym-20 sym">m</span> = <span class="sym-19 sym">p</span>.matcher(<span class="sym-10 sym">command</span>);',
                                                                                 u'\t\t\tString <span class="sym-21 sym">newCommand</span> = <span class="s">""</span>;',
                                                                                 u'\t\t\t<span class="k">if</span> (<span class="sym-20 sym">m</span>.find()) {',
                                                                                 u'\t\t\t\t<span class="sym-21 sym">newCommand</span> = <span class="sym-20 sym">m</span>.group(<span class="c">1</span>);',
                                                                                 u'\t\t\t\t<span class="k">if</span> ( <span class="sym-12 sym">userDefinedCommands</span>.contains(<span class="sym-11 sym">parser</span>.parseCommand(<span class="sym-21 sym">newCommand</span>.split(<span class="s">"\\\\s+"</span>)[<span class="c">0</span>])))',
                                                                                 u'\t\t\t\t\t<span class="sym-21 sym">newCommand</span> = <span class="sym-21 sym">newCommand</span> + <span class="s">"]"</span>;',
                                                                                 u'\t\t\t}',
                                                                                 u'\t\t\t<span class="k">else</span> {',
                                                                                 u'\t\t\t\t<span class="sym-11 sym">parser</span>.throwError(<span class="s">"Not a Valid Command!"</span>);',
                                                                                 u'\t\t\t\t<span class="k">return</span>;'],
                                                                     'endLine': 30,
                                                                     'loc': u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedRepeat.java',
                                                                     'startLine': 14}]],
                                         'message': u'1 duplicated blocks of code must be removed.',
                                         'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java'],
                                         'rule': u'Source files should not have any duplicated blocks',
                                         'severity': 'medium'}],
                 u'Flexibility': {   u'Behavior Driven Design': {   'category description': u'Behavior Driven Design: give each class a purpose by focusing on the behavior (or services) it provides first, its state later',
                                                                    'detail': [   ]},
                                     u'General type': {   'category description': u'Declared types should be as general as possible (i.e., ArrayList should never be visible in your public interface)',
                                                          'detail': []},
                                     u'Polymorphism': {   'category description': u"Polymorphism: use subclassing to avoid 'case-based code logic' (i.e., conditional chains or case statements on 'type' information)",
                                                          'detail': []},
                                     u'Single Purpose': {   'category description': u'Single Purpose: keep classes, methods, and variables short and well named by giving them only one purpose',
                                                            'detail': [   {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\t<span class="k">if</span>(<span class="sym-42 sym">parsingHouseKeeping</span>(<span class="sym-25 sym">updateString</span>, <span class="sym-21 sym">command</span>, <span class="sym-22 sym">terminal</span>, <span class="sym-24 sym">workspace</span>, <span class="sym-23 sym">commandManager</span>) == <span class="k">null</span>){'],
                                                                                              u'msg': u'+1',
                                                                                              u'textRange': {   u'endLine': 36,
                                                                                                                u'endOffset': 4,
                                                                                                                u'startLine': 36,
                                                                                                                u'startOffset': 2}},
                                                                                          {   'code': [   u'\t\t<span class="k">else</span> <span class="k">if</span>(<span class="sym-42 sym">parsingHouseKeeping</span>(<span class="sym-25 sym">updateString</span>, <span class="sym-21 sym">command</span>, <span class="sym-22 sym">terminal</span>, <span class="sym-24 sym">workspace</span>, <span class="sym-23 sym">commandManager</span>).equals(<span class="s">""</span>)){'],
                                                                                              u'msg': u'+1',
                                                                                              u'textRange': {   u'endLine': 39,
                                                                                                                u'endOffset': 9,
                                                                                                                u'startLine': 39,
                                                                                                                u'startOffset': 7}},
                                                                                          {   'code': [   u'\t\t<span class="k">if</span> (<span class="sym-13 sym">myUserDefinedHandler</span>.isLoopCommand(<span class="sym-28 sym">instruction</span>)) {'],
                                                                                              u'msg': u'+1',
                                                                                              u'textRange': {   u'endLine': 43,
                                                                                                                u'endOffset': 4,
                                                                                                                u'startLine': 43,
                                                                                                                u'startOffset': 2}},
                                                                                          {   'code': [   u'\t\t<span class="k">else</span> {'],
                                                                                              u'msg': u'+1',
                                                                                              u'textRange': {   u'endLine': 47,
                                                                                                                u'endOffset': 6,
                                                                                                                u'startLine': 47,
                                                                                                                u'startOffset': 2}},
                                                                                          {   'code': [   u'\t\t\t<span class="k">for</span>(String <span class="sym-29 sym">s</span>: <span class="sym-21 sym">command</span>.split(<span class="s">"\\\\s+"</span>)){'],
                                                                                              u'msg': u'+2 (incl 1 for nesting)',
                                                                                              u'textRange': {   u'endLine': 48,
                                                                                                                u'endOffset': 6,
                                                                                                                u'startLine': 48,
                                                                                                                u'startOffset': 3}},
                                                                                          {   'code': [   u'\t\t\t\t<span class="k">if</span>(<span class="sym-13 sym">myUserDefinedHandler</span>.isLoopCommand(<span class="sym-160 sym">parseCommand</span>(<span class="sym-29 sym">s</span>))){'],
                                                                                              u'msg': u'+3 (incl 2 for nesting)',
                                                                                              u'textRange': {   u'endLine': 49,
                                                                                                                u'endOffset': 6,
                                                                                                                u'startLine': 49,
                                                                                                                u'startOffset': 4}},
                                                                                          {   'code': [   u'\t\t\t<span class="k">if</span>(<span class="sym-30 sym">newCommand</span> == <span class="k">null</span>){'],
                                                                                              u'msg': u'+2 (incl 1 for nesting)',
                                                                                              u'textRange': {   u'endLine': 56,
                                                                                                                u'endOffset': 5,
                                                                                                                u'startLine': 56,
                                                                                                                u'startOffset': 3}},
                                                                                          {   'code': [   u'\t\t\t<span class="k">if</span>(!<span class="sym-21 sym">command</span>.equals(<span class="sym-30 sym">newCommand</span>)){'],
                                                                                              u'msg': u'+2 (incl 1 for nesting)',
                                                                                              u'textRange': {   u'endLine': 59,
                                                                                                                u'endOffset': 5,
                                                                                                                u'startLine': 59,
                                                                                                                u'startOffset': 3}},
                                                                                          {   'code': [   u'\t\t\t<span class="k">else</span>{'],
                                                                                              u'msg': u'+1',
                                                                                              u'textRange': {   u'endLine': 62,
                                                                                                                u'endOffset': 7,
                                                                                                                u'startLine': 62,
                                                                                                                u'startOffset': 3}},
                                                                                          {   'code': [   u'\t\t\t<span class="k">if</span>(<span class="sym-32 sym">commandTree</span> == <span class="k">null</span>){'],
                                                                                              u'msg': u'+3 (incl 2 for nesting)',
                                                                                              u'textRange': {   u'endLine': 65,
                                                                                                                u'endOffset': 5,
                                                                                                                u'startLine': 65,
                                                                                                                u'startOffset': 3}},
                                                                                          {   'code': [   u'\t\t\t<span class="k">if</span>(<span class="sym-26 sym">read</span>){'],
                                                                                              u'msg': u'+3 (incl 2 for nesting)',
                                                                                              u'textRange': {   u'endLine': 69,
                                                                                                                u'endOffset': 5,
                                                                                                                u'startLine': 69,
                                                                                                                u'startOffset': 3}}],
                                                                              'message': u'Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed.',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                              'rule': u'Cognitive Complexity of methods should not be too high',
                                                                              'severity': 'high'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t\t<span class="k">for</span>(ParseNode <span class="sym-151 sym">child</span>: <span class="sym-148 sym">current</span>.getChildren()){'],
                                                                                              u'msg': u'+1',
                                                                                              u'textRange': {   u'endLine': 362,
                                                                                                                u'endOffset': 5,
                                                                                                                u'startLine': 362,
                                                                                                                u'startOffset': 2}},
                                                                                          {   'code': [   u'\t\t\t<span class="k">if</span>(<span class="sym-151 sym">child</span>.getChildren().size() != <span class="c">0</span>){'],
                                                                                              u'msg': u'+2 (incl 1 for nesting)',
                                                                                              u'textRange': {   u'endLine': 363,
                                                                                                                u'endOffset': 5,
                                                                                                                u'startLine': 363,
                                                                                                                u'startOffset': 3}},
                                                                                          {   'code': [   u'\t\t<span class="k">if</span>(<span class="sym-150 sym">count</span> == <span class="c">0</span>){'],
                                                                                              u'msg': u'+1',
                                                                                              u'textRange': {   u'endLine': 368,
                                                                                                                u'endOffset': 4,
                                                                                                                u'startLine': 368,
                                                                                                                u'startOffset': 2}},
                                                                                          {   'code': [   u'\t\t\t<span class="k">if</span>(<span class="sym-148 sym">current</span>.getChildren().size() == <span class="sym-15 sym">myParametersMap</span>.getNumParams(<span class="sym-148 sym">current</span>.getName())){'],
                                                                                              u'msg': u'+2 (incl 1 for nesting)',
                                                                                              u'textRange': {   u'endLine': 369,
                                                                                                                u'endOffset': 5,
                                                                                                                u'startLine': 369,
                                                                                                                u'startOffset': 3}},
                                                                                          {   'code': [   u'\t\t\t\t<span class="k">for</span>(ParseNode <span class="sym-154 sym">node</span>: <span class="sym-153 sym">nodeChildren</span>){'],
                                                                                              u'msg': u'+3 (incl 2 for nesting)',
                                                                                              u'textRange': {   u'endLine': 372,
                                                                                                                u'endOffset': 7,
                                                                                                                u'startLine': 372,
                                                                                                                u'startOffset': 4}},
                                                                                          {   'code': [   u'\t\t\t\t\t<span class="k">if</span>(!<span class="sym-154 sym">node</span>.getName().equals(<span class="s">""</span>)){'],
                                                                                              u'msg': u'+4 (incl 3 for nesting)',
                                                                                              u'textRange': {   u'endLine': 373,
                                                                                                                u'endOffset': 7,
                                                                                                                u'startLine': 373,
                                                                                                                u'startOffset': 5}},
                                                                                          {   'code': [   u'\t\t\t\t<span class="k">for</span>(ParseNode <span class="sym-157 sym">w</span>: <span class="sym-153 sym">nodeChildren</span>){'],
                                                                                              u'msg': u'+3 (incl 2 for nesting)',
                                                                                              u'textRange': {   u'endLine': 379,
                                                                                                                u'endOffset': 7,
                                                                                                                u'startLine': 379,
                                                                                                                u'startOffset': 4}}],
                                                                              'message': u'Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed.',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                                                              'rule': u'Cognitive Complexity of methods should not be too high',
                                                                              'severity': 'high'},
                                                                          {   'author': u'chengkang.xu@duke.edu',
                                                                              'code': [   {   'code': [   u'\t<span class="k">public</span> Double <span class="sym-11 sym">callCommand</span>(String <span class="sym-12 sym">command</span>, String <span class="sym-13 sym">instruction</span>, CommandParser <span class="sym-14 sym">parser</span>, '],
                                                                                              'msg': '',
                                                                                              'textRange': {   u'endLine': 38,
                                                                                                               u'endOffset': 26,
                                                                                                               u'startLine': 38,
                                                                                                               u'startOffset': 15}}],
                                                                              'message': u'Method has 8 parameters, which is greater than 7 authorized.',
                                                                              'path': [   u'duke-compsci308:test-xu:src/backend/UserDefinedCommands.java'],
                                                                              'rule': u'Methods should not have too many parameters',
                                                                              'severity': 'medium'}]}},
                 u'Java Notes': [   {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'<span class="k">public</span> <span class="k">class</span> <span class="sym-1 sym">Parameters</span> {'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 2,
                                                                         u'endOffset': 23,
                                                                         u'startLine': 2,
                                                                         u'startOffset': 13}}],
                                        'message': u'Remove this empty class, write its code or make it an "interface".',
                                        'path': [   u'duke-compsci308:test-xu:src/Parameters.java'],
                                        'rule': u'Classes should not be empty',
                                        'severity': 'low'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t\t\t<span class="sym-68 sym">newCommand</span> = <span class="sym-68 sym">newCommand</span> + <span class="sym-66 sym">commandPieces</span>[<span class="c">0</span>] + <span class="s">" "</span>;'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 141,
                                                                         u'endOffset': 13,
                                                                         u'startLine': 141,
                                                                         u'startOffset': 3}}],
                                        'message': u'Use a StringBuilder instead.',
                                        'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                        'rule': u"Strings should not be concatenated using '+' in a loop",
                                        'severity': 'low'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t\t\t<span class="sym-68 sym">newCommand</span> = <span class="sym-68 sym">newCommand</span> + <span class="sym-66 sym">commandPieces</span>[<span class="sym-70 sym">i</span>] + <span class="s">" "</span>;'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 144,
                                                                         u'endOffset': 13,
                                                                         u'startLine': 144,
                                                                         u'startOffset': 3}}],
                                        'message': u'Use a StringBuilder instead.',
                                        'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                        'rule': u"Strings should not be concatenated using '+' in a loop",
                                        'severity': 'low'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t\t<span class="k">if</span> (<span class="sym-71 sym">originalCommandPieces</span>[<span class="c">0</span>] != <span class="s">"\\\\("</span>) {'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 148,
                                                                         u'endOffset': 33,
                                                                         u'startLine': 148,
                                                                         u'startOffset': 31}}],
                                        'message': u'Use the "equals" method if value comparison was intended.',
                                        'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                        'rule': u'"==" and "!=" should not be used when "equals" is overridden',
                                        'severity': 'low'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t\t\t<span class="sym-100 sym">result</span> = <span class="sym-100 sym">result</span> + <span class="s">" "</span> + <span class="sym-99 sym">commandPieces</span>[<span class="sym-101 sym">y</span>];'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 230,
                                                                         u'endOffset': 9,
                                                                         u'startLine': 230,
                                                                         u'startOffset': 3}}],
                                        'message': u'Use a StringBuilder instead.',
                                        'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                        'rule': u"Strings should not be concatenated using '+' in a loop",
                                        'severity': 'low'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t\t} <span class="k">catch</span> (<span class="sym-3 sym">FileNotFoundException</span> <span class="sym-165 sym">e</span>) {'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 406,
                                                                         u'endOffset': 34,
                                                                         u'startLine': 406,
                                                                         u'startOffset': 11}}],
                                        'message': u'Either log or rethrow this exception.',
                                        'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                        'rule': u'Exception handlers should preserve the original exceptions',
                                        'severity': 'medium'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t\t} <span class="k">catch</span> (<span class="sym-4 sym">IOException</span> <span class="sym-166 sym">e</span>) {'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 408,
                                                                         u'endOffset': 24,
                                                                         u'startLine': 408,
                                                                         u'startOffset': 11}}],
                                        'message': u'Either log or rethrow this exception.',
                                        'path': [   u'duke-compsci308:test-xu:src/backend/CommandParser.java'],
                                        'rule': u'Exception handlers should preserve the original exceptions',
                                        'severity': 'medium'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t    \t<span class="k">return</span> <span class="sym-4 sym">myMultiValues</span>;'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 25,
                                                                         u'endOffset': 26,
                                                                         u'startLine': 25,
                                                                         u'startOffset': 13}}],
                                        'message': u'Return a copy of "myMultiValues".',
                                        'path': [   u'duke-compsci308:test-xu:src/backend/ParseNode.java'],
                                        'rule': u'Mutable members should not be stored or returned directly',
                                        'severity': 'low'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t    \t<span class="k">return</span> <span class="sym-5 sym">myChildren</span>;'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 49,
                                                                         u'endOffset': 23,
                                                                         u'startLine': 49,
                                                                         u'startOffset': 13}}],
                                        'message': u'Return a copy of "myChildren".',
                                        'path': [   u'duke-compsci308:test-xu:src/backend/ParseNode.java'],
                                        'rule': u'Mutable members should not be stored or returned directly',
                                        'severity': 'low'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'            <span class="sym-11 sym">addEntry</span>(<span class="k">new</span> StringObjectEntry(<span class="s">""</span> + <span class="sym-34 sym">index</span>, <span class="sym-35 sym">value</span>), <span class="k">true</span>);'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 128,
                                                                         u'endOffset': 53,
                                                                         u'startLine': 128,
                                                                         u'startOffset': 43}}],
                                        'message': u'Use "Integer.toString" instead.',
                                        'path': [   u'duke-compsci308:test-xu:src/frontend/EntryManager.java'],
                                        'rule': u'Primitives should not be boxed just for "String" conversion',
                                        'severity': 'medium'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'        <span class="k">catch</span> (IndexOutOfBoundsException <span class="sym-36 sym">e</span>) {'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 130,
                                                                         u'endOffset': 42,
                                                                         u'startLine': 130,
                                                                         u'startOffset': 15}}],
                                        'message': u'Either log or rethrow this exception.',
                                        'path': [   u'duke-compsci308:test-xu:src/frontend/EntryManager.java'],
                                        'rule': u'Exception handlers should preserve the original exceptions',
                                        'severity': 'medium'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'        <span class="k">catch</span>(ClassCastException <span class="sym-15 sym">e</span>){'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 30,
                                                                         u'endOffset': 34,
                                                                         u'startLine': 30,
                                                                         u'startOffset': 14}}],
                                        'message': u'Either log or rethrow this exception.',
                                        'path': [   u'duke-compsci308:test-xu:src/frontend/WorkspaceView.java'],
                                        'rule': u'Exception handlers should preserve the original exceptions',
                                        'severity': 'medium'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t\t<span class="k">catch</span>(IllegalArgumentException <span class="sym-19 sym">e</span>){'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 24,
                                                                         u'endOffset': 34,
                                                                         u'startLine': 24,
                                                                         u'startOffset': 8}}],
                                        'message': u'Either log or rethrow this exception.',
                                        'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/DisplaySetPalette.java'],
                                        'rule': u'Exception handlers should preserve the original exceptions',
                                        'severity': 'medium'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t   <span class="k">catch</span>(IllegalArgumentException <span class="sym-18 sym">e</span>){'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 23,
                                                                         u'endOffset': 36,
                                                                         u'startLine': 23,
                                                                         u'startOffset': 10}}],
                                        'message': u'Either log or rethrow this exception.',
                                        'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/DisplaySetShape.java'],
                                        'rule': u'Exception handlers should preserve the original exceptions',
                                        'severity': 'medium'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t\tString <span class="sym-15 sym">substring1</span> = <span class="k">new</span> String();'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 15,
                                                                         u'endOffset': 32,
                                                                         u'startLine': 15,
                                                                         u'startOffset': 26}}],
                                        'message': u'Remove this "String" constructor',
                                        'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedMakeUserInstruction.java'],
                                        'rule': u'Constructors should not be used to instantiate "String" and primitive-wrapper classes',
                                        'severity': 'medium'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t\tString <span class="sym-16 sym">substring2</span> = <span class="k">new</span> String();'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 16,
                                                                         u'endOffset': 32,
                                                                         u'startLine': 16,
                                                                         u'startOffset': 26}}],
                                        'message': u'Remove this "String" constructor',
                                        'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedMakeUserInstruction.java'],
                                        'rule': u'Constructors should not be used to instantiate "String" and primitive-wrapper classes',
                                        'severity': 'medium'},
                                    {   'author': u'chengkang.xu@duke.edu',
                                        'code': [   {   'code': [   u'\t\t\t<span class="sym-23 sym">tempCommand</span> = <span class="sym-23 sym">tempCommand</span> + <span class="s">" "</span> + <span class="sym-24 sym">x</span>;'],
                                                        'msg': '',
                                                        'textRange': {   u'endLine': 45,
                                                                         u'endOffset': 14,
                                                                         u'startLine': 45,
                                                                         u'startOffset': 3}}],
                                        'message': u'Use a StringBuilder instead.',
                                        'path': [   u'duke-compsci308:test-xu:src/methodinterfaces/UserDefinedMakeUserInstruction.java'],
                                        'rule': u"Strings should not be concatenated using '+' in a loop",
                                        'severity': 'low'}],
                 u'Modularity': {   u'Active classes': {   'category description': u'Active classes: classes should not consist of only get/set methods and, in general, should minimize their use. ',
                                                           'detail': []},
                                    u'Data responsibility': {   'category description': u"Tell, don't ask: classes should be responsible for their own data and delegate to other objects instead of doing it themselves",
                                                                'detail': [   {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> Group <span class="sym-16 sym">root</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 28,
                                                                                                                   u'endOffset': 22,
                                                                                                                   u'startLine': 28,
                                                                                                                   u'startOffset': 18}}],
                                                                                  'message': u'Remove the "root" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/Display.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'<span class="k">public</span> <span class="k">class</span> <span class="sym-16 sym">SLOGOScreen</span> {'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 31,
                                                                                                                   u'endOffset': 24,
                                                                                                                   u'startLine': 31,
                                                                                                                   u'startOffset': 13}}],
                                                                                  'message': u'Add a constructor to the class.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/SLOGOScreen.java'],
                                                                                  'rule': u'Classes and enums with private members should have a constructor',
                                                                                  'severity': 'medium'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> Scene <span class="sym-21 sym">myScene</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 36,
                                                                                                                   u'endOffset': 25,
                                                                                                                   u'startLine': 36,
                                                                                                                   u'startOffset': 18}}],
                                                                                  'message': u'Remove the "myScene" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/SLOGOScreen.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> HBox <span class="sym-29 sym">myControls</span> = <span class="k">new</span> HBox();'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 45,
                                                                                                                   u'endOffset': 27,
                                                                                                                   u'startLine': 45,
                                                                                                                   u'startOffset': 17}}],
                                                                                  'message': u'Remove the "myControls" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/SLOGOScreen.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> CommandParser <span class="sym-32 sym">myCommandParser</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 50,
                                                                                                                   u'endOffset': 41,
                                                                                                                   u'startLine': 50,
                                                                                                                   u'startOffset': 26}}],
                                                                                  'message': u'Remove the "myCommandParser" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> EntryManager <span class="sym-41 sym">myTerminalManager</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 59,
                                                                                                                   u'endOffset': 42,
                                                                                                                   u'startLine': 59,
                                                                                                                   u'startOffset': 25}}],
                                                                                  'message': u'Remove the "myTerminalManager" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> EntryManager <span class="sym-42 sym">myCommandManager</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 60,
                                                                                                                   u'endOffset': 41,
                                                                                                                   u'startLine': 60,
                                                                                                                   u'startOffset': 25}}],
                                                                                  'message': u'Remove the "myCommandManager" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> EntryManager <span class="sym-43 sym">myWorkspaceManager</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 61,
                                                                                                                   u'endOffset': 43,
                                                                                                                   u'startLine': 61,
                                                                                                                   u'startOffset': 25}}],
                                                                                  'message': u'Remove the "myWorkspaceManager" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> EntryManager <span class="sym-44 sym">myTurtleManager</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 62,
                                                                                                                   u'endOffset': 40,
                                                                                                                   u'startLine': 62,
                                                                                                                   u'startOffset': 25}}],
                                                                                  'message': u'Remove the "myTurtleManager" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> EntryManager <span class="sym-45 sym">myColorManager</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 63,
                                                                                                                   u'endOffset': 39,
                                                                                                                   u'startLine': 63,
                                                                                                                   u'startOffset': 25}}],
                                                                                  'message': u'Remove the "myColorManager" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> EntryManager <span class="sym-46 sym">myShapeManager</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 64,
                                                                                                                   u'endOffset': 39,
                                                                                                                   u'startLine': 64,
                                                                                                                   u'startOffset': 25}}],
                                                                                  'message': u'Remove the "myShapeManager" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> LanguageManager <span class="sym-47 sym">myLanguageManager</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 65,
                                                                                                                   u'endOffset': 45,
                                                                                                                   u'startLine': 65,
                                                                                                                   u'startOffset': 28}}],
                                                                                  'message': u'Remove the "myLanguageManager" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'},
                                                                              {   'author': u'chengkang.xu@duke.edu',
                                                                                  'code': [   {   'code': [   u'    <span class="k">private</span> MultipleTurtles <span class="sym-51 sym">myTurtles</span>;'],
                                                                                                  'msg': '',
                                                                                                  'textRange': {   u'endLine': 69,
                                                                                                                   u'endOffset': 37,
                                                                                                                   u'startLine': 69,
                                                                                                                   u'startOffset': 28}}],
                                                                                  'message': u'Remove the "myTurtles" field and declare it as a local variable in the relevant methods.',
                                                                                  'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                  'rule': u'Private fields only used as local variables in methods should become local variables',
                                                                                  'severity': 'low'}]},
                                    u'Get method give minimum info': {   'category description': u'get methods should give away the minimal information possible',
                                                                         'detail': [   ]},
                                    u'Get method validate input': {   'category description': u'set methods should validate data received',
                                                                      'detail': [   ]},
                                    u'No manager classes': {   'category description': u"No 'manager' classes: create several classes that work together distributing intelligence, rather than one 'smart' class and a few 'dumb' helpers",
                                                               'detail': [   {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'<span class="k">public</span> <span class="k">class</span> <span class="sym-24 sym">TurtlePreferences</span> <span class="k">extends</span> Preferences {'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 36,
                                                                                                                  u'endOffset': 30,
                                                                                                                  u'startLine': 36,
                                                                                                                  u'startOffset': 13}}],
                                                                                 'message': u'Split this class into smaller and more specialized ones to reduce its dependencies on other classes from 21 to the maximum authorized 20 or less.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/TurtlePreferences.java'],
                                                                                 'rule': u'Classes should not be coupled to too many other classes (Single Responsibility Principle)',
                                                                                 'severity': 'medium'},
                                                                             {   'author': u'chengkang.xu@duke.edu',
                                                                                 'code': [   {   'code': [   u'<span class="k">public</span> <span class="k">class</span> <span class="sym-20 sym">UserInterface</span> {'],
                                                                                                 'msg': '',
                                                                                                 'textRange': {   u'endLine': 33,
                                                                                                                  u'endOffset': 26,
                                                                                                                  u'startLine': 33,
                                                                                                                  u'startOffset': 13}}],
                                                                                 'message': u'Split this class into smaller and more specialized ones to reduce its dependencies on other classes from 30 to the maximum authorized 20 or less.',
                                                                                 'path': [   u'duke-compsci308:test-xu:src/frontend/UserInterface.java'],
                                                                                 'rule': u'Classes should not be coupled to too many other classes (Single Responsibility Principle)',
                                                                                 'severity': 'medium'}]},
                                    u'No public instance variables': {   'category description': u'No public instance variables: keep implementation details of your class hidden from the public interface',
                                                                         'detail': [   ]},
                                    u'No static variables': {   'category description': u'No static variables: there should be no reason for shared global public state',
                                                                'detail': [   ]},
                                    u'Superclasses are their own class': {   'category description': u'Superclasses are their own class: thus should not contain instance variables or methods specific to only some subclasses',
                                                                             'detail': [   ]}}},
    'percentage': {   u'Code Smells': 80.0,
                      u'Communication': 81.2206572769953,
                      u'Duplications': 46.15384615384615,
                      u'Flexibility': 82.5,
                      u'Java Notes': 92.24806201550388,
                      u'Modularity': 83.33333333333334},
    'severitylist': [u'fail', u'high', u'medium', u'low', u'info']}
