@@ -1 +0,0 @@
{"src": {"files": {"src/Main.java": [{"code": [{"msg": "", "code": ["import frontend.*;"], "textRange": {"endLine": 3, "startLine": 3, "startOffset": 7, "endOffset": 17}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Wildcard imports should not be used", "path": ["duke-compsci308:test-xu:src/Main.java"], "message": "Explicitly import the specific classes needed."}], "src/nonsense.java": [], "src/testthree.java": [{"code": [{"msg": "", "code": ["public class testthree {"], "textRange": {"endLine": 1, "startLine": 1, "startOffset": 13, "endOffset": 22}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Class names should comply with a naming convention", "path": ["duke-compsci308:test-xu:src/testthree.java"], "message": "Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'."}], "src/testone.java": [{"code": [{"msg": "", "code": ["public class testone {"], "textRange": {"endLine": 1, "startLine": 1, "startOffset": 13, "endOffset": 20}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Class names should comply with a naming convention", "path": ["duke-compsci308:test-xu:src/testone.java"], "message": "Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'."}, {"code": [{"msg": "", "code": [" int aa = 1 * 99 * 1000000;"], "textRange": {"endLine": 9, "startLine": 9, "startOffset": 26, "endOffset": 33}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/testone.java"], "message": "Assign this magic number 1000000 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" int aa = 1 * 99 * 1000000;"], "textRange": {"endLine": 19, "startLine": 19, "startOffset": 21, "endOffset": 23}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/testone.java"], "message": "Assign this magic number 99 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" int aa = 1 * 99 * 1000000;"], "textRange": {"endLine": 19, "startLine": 19, "startOffset": 26, "endOffset": 33}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/testone.java"], "message": "Assign this magic number 1000000 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" int aa = 1 * 99 * 1000000;"], "textRange": {"endLine": 9, "startLine": 9, "startOffset": 21, "endOffset": 23}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/testone.java"], "message": "Assign this magic number 99 to a well-named constant, and use the constant instead."}], "src/Parameters.java": [{"code": [{"msg": "", "code": ["public class Parameters {"], "textRange": {"endLine": 2, "startLine": 2, "startOffset": 13, "endOffset": 23}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Classes should not be empty", "path": ["duke-compsci308:test-xu:src/Parameters.java"], "message": "Remove this empty class, write its code or make it an \"interface\"."}], "src/CommandParserInterface.java": [], "src/testtwo.java": [{"code": [{"msg": "", "code": ["public class testtwo {"], "textRange": {"endLine": 1, "startLine": 1, "startOffset": 13, "endOffset": 20}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Class names should comply with a naming convention", "path": ["duke-compsci308:test-xu:src/testtwo.java"], "message": "Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'."}], "src/ParametersInterface.java": []}, "directories": {"src/backend": [], "src/frontend": [], "src/methodinterfaces": [], "src/resources": []}}, "src/resources/frontendResources": {"files": {"src/resources/frontendResources/green_circle.png": [], "src/resources/frontendResources/help.html": [], "src/resources/frontendResources/turtle.png": [], "src/resources/frontendResources/Pref.properties": [], "src/resources/frontendResources/turtleTest.png": [], "src/resources/frontendResources/blue_triangle.png": [], "src/resources/frontendResources/custom.css": [], "src/resources/frontendResources/red_square.jpg": [], "src/resources/frontendResources/Scene.properties": [], "src/resources/frontendResources/turtle_gif.gif": []}, "directories": {}}, "src/methodinterfaces": {"files": {"src/methodinterfaces/TurtleBackward.java": [], "src/methodinterfaces/DisplayClearStamps.java": [], "src/methodinterfaces/BooleanNot.java": [], "src/methodinterfaces/TurtleHideTurtle.java": [], "src/methodinterfaces/UserDefinedMakeUserInstruction.java": [{"code": [{"msg": "", "code": ["\t\tString substring1 = new String();"], "textRange": {"endLine": 15, "startLine": 15, "startOffset": 26, "endOffset": 32}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Constructors should not be used to instantiate \"String\" and primitive-wrapper classes", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedMakeUserInstruction.java"], "message": "Remove this \"String\" constructor"}, {"code": [{"msg": "", "code": ["\t\tString substring2 = new String();"], "textRange": {"endLine": 16, "startLine": 16, "startOffset": 26, "endOffset": 32}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Constructors should not be used to instantiate \"String\" and primitive-wrapper classes", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedMakeUserInstruction.java"], "message": "Remove this \"String\" constructor"}, {"code": [{"msg": "", "code": ["\t\t\ttempCommand = tempCommand + \" \" + x;"], "textRange": {"endLine": 45, "startLine": 45, "startOffset": 3, "endOffset": 14}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Strings should not be concatenated using '+' in a loop", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedMakeUserInstruction.java"], "message": "Use a StringBuilder instead."}], "src/methodinterfaces/TurtleIsPenDown.java": [{"code": [{"msg": "", "code": ["\t\tif (display.isTurtlePenDown())"], "textRange": {"endLine": 9, "startLine": 9, "startOffset": 2, "endOffset": 4}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/TurtleIsPenDown.java"], "message": "Missing curly brace."}], "src/methodinterfaces/TurtleTellMulti.java": [{"code": [{"msg": "", "code": ["\t\tSet<Double> currentTurtles = new HashSet<Double>();"], "textRange": {"endLine": 14, "startLine": 14, "startOffset": 42, "endOffset": 50}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/methodinterfaces/TurtleTellMulti.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}], "src/methodinterfaces/DisplaySetPenSize.java": [], "src/methodinterfaces/TurtlePenUp.java": [], "src/methodinterfaces/TurtlePenDown.java": [], "src/methodinterfaces/TurtleHeading.java": [], "src/methodinterfaces/MathDifference.java": [], "src/methodinterfaces/UserDefinedMakeVariable.java": [{"code": [{"msg": "", "code": ["\t\tif (commandPieces.length != 3) {"], "textRange": {"endLine": 17, "startLine": 17, "startOffset": 30, "endOffset": 31}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedMakeVariable.java"], "message": "Assign this magic number 3 to a well-named constant, and use the constant instead."}], "src/methodinterfaces/BooleanOr.java": [], "src/methodinterfaces/MathSum.java": [], "src/methodinterfaces/TurtleForward.java": [], "src/methodinterfaces/MathMinus.java": [], "src/methodinterfaces/MathLog.java": [], "src/methodinterfaces/DisplayInterface.java": [], "src/methodinterfaces/UserDefinedIfElse.java": [{"code": [{"msg": "", "code": ["\t\t\tint expr = Integer.parseInt(commandPieces[1]);"], "textRange": {"endLine": 18, "startLine": 18, "startOffset": 7, "endOffset": 11}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Variables should not be declared before they are relevant", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java"], "message": "Move the declaration of \"expr\" closer to the code that uses it."}, {"code": [{"msg": "", "code": ["\t\t\t\tif ( userDefinedCommands.contains(parser.parseCommand(newTrueCommand.split(\"\\\\s+\")[0])))"], "textRange": {"endLine": 24, "startLine": 24, "startOffset": 4, "endOffset": 6}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java"], "message": "Missing curly brace."}, {"code": [{"msg": "", "code": ["\t\t\t\tif ( userDefinedCommands.contains(parser.parseCommand(newFalseCommand.split(\"\\\\s+\")[0])))"], "textRange": {"endLine": 34, "startLine": 34, "startOffset": 4, "endOffset": 6}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java"], "message": "Missing curly brace."}, {"code": [{"msg": "", "code": ["\t\t\tif ( expr != 0 )"], "textRange": {"endLine": 41, "startLine": 41, "startOffset": 3, "endOffset": 5}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java"], "message": "Missing curly brace."}, {"code": [{"msg": "", "code": ["\t\t\telse"], "textRange": {"endLine": 43, "startLine": 43, "startOffset": 3, "endOffset": 7}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java"], "message": "Missing curly brace."}], "src/methodinterfaces/TurtleSetTowards.java": [], "src/methodinterfaces/TurtleHome.java": [], "src/methodinterfaces/BooleanGreater.java": [], "src/methodinterfaces/UserDefinedIf.java": [{"code": [{"msg": "", "code": ["\t\t\tint expr = Integer.parseInt(commandPieces[1]);"], "textRange": {"endLine": 19, "startLine": 19, "startOffset": 7, "endOffset": 11}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Variables should not be declared before they are relevant", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java"], "message": "Move the declaration of \"expr\" closer to the code that uses it."}, {"code": [{"msg": "", "code": ["\t\t\t\tif ( userDefinedCommands.contains(parser.parseCommand(newCommand.split(\"\\\\s+\")[0])))"], "textRange": {"endLine": 25, "startLine": 25, "startOffset": 4, "endOffset": 6}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java"], "message": "Missing curly brace."}, {"code": [{"msg": "", "code": ["\t\t\tif ( expr != 0 )"], "textRange": {"endLine": 32, "startLine": 32, "startOffset": 3, "endOffset": 5}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java"], "message": "Missing curly brace."}, {"code": [{"msg": "", "code": ["\t\t\telse"], "textRange": {"endLine": 34, "startLine": 34, "startOffset": 3, "endOffset": 7}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java"], "message": "Missing curly brace."}], "src/methodinterfaces/TurtleSetPosition.java": [], "src/methodinterfaces/DisplayShape.java": [{"code": [{"msg": "", "code": ["\t\treturn (int) (Math.random()*6) + 1;"], "textRange": {"endLine": 15, "startLine": 15, "startOffset": 30, "endOffset": 31}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/methodinterfaces/DisplayShape.java"], "message": "Assign this magic number 6 to a well-named constant, and use the constant instead."}], "src/methodinterfaces/UserDefinedRepeat.java": [{"code": [{"msg": "", "code": ["\t\t\tint expr = Integer.parseInt(commandPieces[1]);"], "textRange": {"endLine": 19, "startLine": 19, "startOffset": 7, "endOffset": 11}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Variables should not be declared before they are relevant", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedRepeat.java"], "message": "Move the declaration of \"expr\" closer to the code that uses it."}, {"code": [{"msg": "", "code": ["\t\t\t\tif ( userDefinedCommands.contains(parser.parseCommand(newCommand.split(\"\\\\s+\")[0])))"], "textRange": {"endLine": 25, "startLine": 25, "startOffset": 4, "endOffset": 6}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedRepeat.java"], "message": "Missing curly brace."}], "src/methodinterfaces/UserDefinedDoTimes.java": [{"code": [{"msg": "", "code": ["\t\tif (m.find())"], "textRange": {"endLine": 21, "startLine": 21, "startOffset": 2, "endOffset": 4}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedDoTimes.java"], "message": "Missing curly brace."}, {"code": [{"msg": "", "code": ["\t\t\tif ( userDefinedCommands.contains(parser.parseCommand(newCommand.split(\"\\\\s+\")[0])))"], "textRange": {"endLine": 30, "startLine": 30, "startOffset": 3, "endOffset": 5}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedDoTimes.java"], "message": "Missing curly brace."}], "src/methodinterfaces/MathPow.java": [], "src/methodinterfaces/TurtleAskWith.java": [], "src/methodinterfaces/TurtleXCor.java": [], "src/methodinterfaces/MultiTurtleInterface.java": [], "src/methodinterfaces/MathQuotient.java": [], "src/methodinterfaces/MathInterface.java": [], "src/methodinterfaces/MathSin.java": [], "src/methodinterfaces/TurtleInterface.java": [], "src/methodinterfaces/TurtleID.java": [], "src/methodinterfaces/BooleanAnd.java": [], "src/methodinterfaces/TurtleLeft.java": [], "src/methodinterfaces/TurtleSetHeading.java": [], "src/methodinterfaces/DisplaySetPalette.java": [{"code": [{"msg": "", "code": ["\t\tcatch(IllegalArgumentException e){"], "textRange": {"endLine": 24, "startLine": 24, "startOffset": 8, "endOffset": 34}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Exception handlers should preserve the original exceptions", "path": ["duke-compsci308:test-xu:src/methodinterfaces/DisplaySetPalette.java"], "message": "Either log or rethrow this exception."}, {"code": [{"msg": "", "code": [" private double rgb = 255;"], "textRange": {"endLine": 16, "startLine": 16, "startOffset": 25, "endOffset": 28}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/methodinterfaces/DisplaySetPalette.java"], "message": "Assign this magic number 255 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": ["\t\t colorManager.set((int)args[0],new Color(args[1]/rgb,args[2]/rgb,args[3]/rgb,1.0));"], "textRange": {"endLine": 21, "startLine": 21, "startOffset": 75, "endOffset": 76}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/methodinterfaces/DisplaySetPalette.java"], "message": "Assign this magic number 3 to a well-named constant, and use the constant instead."}], "src/methodinterfaces/BooleanLess.java": [], "src/methodinterfaces/TurtleShowTurtle.java": [], "src/methodinterfaces/TurtleIsShowing.java": [{"code": [{"msg": "", "code": ["\t\tif (display.getTurtleVisibility())"], "textRange": {"endLine": 9, "startLine": 9, "startOffset": 2, "endOffset": 4}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/TurtleIsShowing.java"], "message": "Missing curly brace."}], "src/methodinterfaces/TurtleTurtles.java": [], "src/methodinterfaces/DisplayStamp.java": [], "src/methodinterfaces/MathCos.java": [], "src/methodinterfaces/DisplayPenColor.java": [], "src/methodinterfaces/MathRandom.java": [], "src/methodinterfaces/TurtleYCor.java": [], "src/methodinterfaces/MathTan.java": [], "src/methodinterfaces/TurtleRight.java": [], "src/methodinterfaces/TurtleClearScreen.java": [], "src/methodinterfaces/MathRemainder.java": [], "src/methodinterfaces/TurtleAsk.java": [{"code": [{"msg": "", "code": ["\t\tList<Integer> paramArray = new ArrayList<Integer>();"], "textRange": {"endLine": 23, "startLine": 23, "startOffset": 42, "endOffset": 51}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/methodinterfaces/TurtleAsk.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}], "src/methodinterfaces/DisplaySetShape.java": [{"code": [{"msg": "", "code": ["\t catch(IllegalArgumentException e){"], "textRange": {"endLine": 23, "startLine": 23, "startOffset": 10, "endOffset": 36}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Exception handlers should preserve the original exceptions", "path": ["duke-compsci308:test-xu:src/methodinterfaces/DisplaySetShape.java"], "message": "Either log or rethrow this exception."}], "src/methodinterfaces/UserDefinedFor.java": [{"code": [{"msg": "", "code": ["\t\tif ( loopStuff.length != 4) {"], "textRange": {"endLine": 37, "startLine": 37, "startOffset": 27, "endOffset": 28}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java"], "message": "Assign this magic number 4 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": ["\t\t\tint increment = Integer.parseInt(loopStuff[3]);"], "textRange": {"endLine": 44, "startLine": 44, "startOffset": 46, "endOffset": 47}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java"], "message": "Assign this magic number 3 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": ["\t\tif (m.find())"], "textRange": {"endLine": 20, "startLine": 20, "startOffset": 2, "endOffset": 4}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java"], "message": "Missing curly brace."}, {"code": [{"msg": "", "code": ["\t\t\tif ( userDefinedCommands.contains(parser.parseCommand(newCommand.split(\"\\\\s+\")[0])))"], "textRange": {"endLine": 29, "startLine": 29, "startOffset": 3, "endOffset": 5}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java"], "message": "Missing curly brace."}], "src/methodinterfaces/DisplaySetPenColor.java": [], "src/methodinterfaces/MathProduct.java": [], "src/methodinterfaces/TurtleTell.java": [], "src/methodinterfaces/UserDefinedInterface.java": [], "src/methodinterfaces/MathAtan.java": [], "src/methodinterfaces/SpecialTurtleInterface.java": [], "src/methodinterfaces/DisplaySetBackground.java": [], "src/methodinterfaces/BooleanEqual.java": [], "src/methodinterfaces/MathPi.java": [], "src/methodinterfaces/BooleanNotequal.java": []}, "directories": {}}, "src/resources/languages": {"files": {"src/resources/languages/Portuguese.properties": [], "src/resources/languages/Russian.properties": [], "src/resources/languages/Chinese.properties": [], "src/resources/languages/German.properties": [], "src/resources/languages/Spanish.properties": [], "src/resources/languages/Syntax.properties": [], "src/resources/languages/English.properties": [], "src/resources/languages/Italian.properties": [], "src/resources/languages/French.properties": []}, "directories": {}}, "src/frontend": {"files": {"src/frontend/ModifiedStringConverter.java": [], "src/frontend/LanguageManager.java": [], "src/frontend/CommandLine.java": [], "src/frontend/Preferences.java": [], "src/frontend/CheckedDoubleStringConverter.java": [], "src/frontend/SLOGOScreen.java": [{"code": [{"msg": "", "code": [" private ComboBox<Entry> mySavedWorkspaces = new ComboBox<Entry>(mySavedManager.getEntryList());"], "textRange": {"endLine": 40, "startLine": 40, "startOffset": 60, "endOffset": 67}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/frontend/SLOGOScreen.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": [" private List<GridPane> myUIPaneList = new ArrayList<GridPane>();"], "textRange": {"endLine": 46, "startLine": 46, "startOffset": 55, "endOffset": 65}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/frontend/SLOGOScreen.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": ["public class SLOGOScreen {"], "textRange": {"endLine": 31, "startLine": 31, "startOffset": 13, "endOffset": 24}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Classes and enums with private members should have a constructor", "path": ["duke-compsci308:test-xu:src/frontend/SLOGOScreen.java"], "message": "Add a constructor to the class."}, {"code": [{"msg": "", "code": [" private Scene myScene;"], "textRange": {"endLine": 36, "startLine": 36, "startOffset": 18, "endOffset": 25}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/SLOGOScreen.java"], "message": "Remove the \"myScene\" field and declare it as a local variable in the relevant methods."}, {"code": [{"msg": "", "code": [" private HBox myControls = new HBox();"], "textRange": {"endLine": 45, "startLine": 45, "startOffset": 17, "endOffset": 27}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/SLOGOScreen.java"], "message": "Remove the \"myControls\" field and declare it as a local variable in the relevant methods."}, {"code": [{"msg": "", "code": [" UIPane = UI.getGridPane();"], "textRange": {"endLine": 124, "startLine": 124, "startOffset": 12, "endOffset": 18}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Method parameters, caught exceptions and foreach variables should not be reassigned", "path": ["duke-compsci308:test-xu:src/frontend/SLOGOScreen.java"], "message": "Introduce a new variable instead of reusing the parameter \"UIPane\"."}, {"code": [{"msg": "", "code": [" title = title + \" \" + (myTabPane.getTabs().size() + 1);"], "textRange": {"endLine": 125, "startLine": 125, "startOffset": 12, "endOffset": 17}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Method parameters, caught exceptions and foreach variables should not be reassigned", "path": ["duke-compsci308:test-xu:src/frontend/SLOGOScreen.java"], "message": "Introduce a new variable instead of reusing the parameter \"title\"."}], "src/frontend/StringNumEntry.java": [], "src/frontend/StringStringEntry.java": [], "src/frontend/EntryManager.java": [{"code": [{"msg": "", "code": [" addEntry(new StringObjectEntry(\"\" + index, value), true);"], "textRange": {"endLine": 128, "startLine": 128, "startOffset": 43, "endOffset": 53}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Primitives should not be boxed just for \"String\" conversion", "path": ["duke-compsci308:test-xu:src/frontend/EntryManager.java"], "message": "Use \"Integer.toString\" instead."}, {"code": [{"msg": "", "code": [" catch (IndexOutOfBoundsException e) {"], "textRange": {"endLine": 130, "startLine": 130, "startOffset": 15, "endOffset": 42}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Exception handlers should preserve the original exceptions", "path": ["duke-compsci308:test-xu:src/frontend/EntryManager.java"], "message": "Either log or rethrow this exception."}], "src/frontend/TurtlePreferences.java": [{"code": [{"msg": "", "code": ["public class TurtlePreferences extends Preferences {"], "textRange": {"endLine": 36, "startLine": 36, "startOffset": 13, "endOffset": 30}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Classes should not be coupled to too many other classes (Single Responsibility Principle)", "path": ["duke-compsci308:test-xu:src/frontend/TurtlePreferences.java"], "message": "Split this class into smaller and more specialized ones to reduce its dependencies on other classes from 21 to the maximum authorized 20 or less."}], "src/frontend/ColorDisplayCell.java": [{"code": [{"msg": "", "code": [" this.setTooltip(new Tooltip(\" [r=\" + (int) (col.getRed() * 255) + \",b=\" +"], "textRange": {"endLine": 39, "startLine": 39, "startOffset": 67, "endOffset": 70}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/frontend/ColorDisplayCell.java"], "message": "Assign this magic number 255 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" (int) (col.getBlue() * 255) + \",g=\" +"], "textRange": {"endLine": 40, "startLine": 40, "startOffset": 59, "endOffset": 62}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/frontend/ColorDisplayCell.java"], "message": "Assign this magic number 255 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" (int) (col.getGreen() * 255) + \"]\"));"], "textRange": {"endLine": 41, "startLine": 41, "startOffset": 60, "endOffset": 63}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/frontend/ColorDisplayCell.java"], "message": "Assign this magic number 255 to a well-named constant, and use the constant instead."}], "src/frontend/PenAction.java": [], "src/frontend/DisplayPreferences.java": [], "src/frontend/TextPrompt.java": [], "src/frontend/TerminalView.java": [], "src/frontend/UserDefinedView.java": [], "src/frontend/ModuleView.java": [], "src/frontend/PaletteView.java": [], "src/frontend/LanguagePreferences.java": [], "src/frontend/ColorPaletteView.java": [{"code": [{"msg": "", "code": ["import java.util.*;"], "textRange": {"endLine": 4, "startLine": 4, "startOffset": 7, "endOffset": 18}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Wildcard imports should not be used", "path": ["duke-compsci308:test-xu:src/frontend/ColorPaletteView.java"], "message": "Explicitly import the specific classes needed."}], "src/frontend/StringObjectEntry.java": [], "src/frontend/ShapePaletteView.java": [{"code": [{"msg": "", "code": ["import java.util.*;"], "textRange": {"endLine": 4, "startLine": 4, "startOffset": 7, "endOffset": 18}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Wildcard imports should not be used", "path": ["duke-compsci308:test-xu:src/frontend/ShapePaletteView.java"], "message": "Explicitly import the specific classes needed."}], "src/frontend/HTMLopener.java": [], "src/frontend/ImageDisplayCell.java": [], "src/frontend/UserInterface.java": [{"code": [{"msg": "", "code": [" myGridPane.add(myCommandLine.getTextField(), 1, 2, 1, 6);"], "textRange": {"endLine": 157, "startLine": 157, "startOffset": 62, "endOffset": 63}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Assign this magic number 6 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" 2, 6, 3, 6);"], "textRange": {"endLine": 161, "startLine": 161, "startOffset": 24, "endOffset": 25}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Assign this magic number 6 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" 2, 6, 3, 6);"], "textRange": {"endLine": 161, "startLine": 161, "startOffset": 27, "endOffset": 28}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Assign this magic number 3 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" 2, 6, 3, 6);"], "textRange": {"endLine": 161, "startLine": 161, "startOffset": 30, "endOffset": 31}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Assign this magic number 6 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" 2, 1, 2, 5);"], "textRange": {"endLine": 164, "startLine": 164, "startOffset": 30, "endOffset": 31}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Assign this magic number 5 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" private CommandParser myCommandParser;"], "textRange": {"endLine": 50, "startLine": 50, "startOffset": 26, "endOffset": 41}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Remove the \"myCommandParser\" field and declare it as a local variable in the relevant methods."}, {"code": [{"msg": "", "code": [" private EntryManager myTerminalManager;"], "textRange": {"endLine": 59, "startLine": 59, "startOffset": 25, "endOffset": 42}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Remove the \"myTerminalManager\" field and declare it as a local variable in the relevant methods."}, {"code": [{"msg": "", "code": [" private EntryManager myCommandManager;"], "textRange": {"endLine": 60, "startLine": 60, "startOffset": 25, "endOffset": 41}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Remove the \"myCommandManager\" field and declare it as a local variable in the relevant methods."}, {"code": [{"msg": "", "code": [" private EntryManager myWorkspaceManager;"], "textRange": {"endLine": 61, "startLine": 61, "startOffset": 25, "endOffset": 43}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Remove the \"myWorkspaceManager\" field and declare it as a local variable in the relevant methods."}, {"code": [{"msg": "", "code": [" private EntryManager myTurtleManager;"], "textRange": {"endLine": 62, "startLine": 62, "startOffset": 25, "endOffset": 40}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Remove the \"myTurtleManager\" field and declare it as a local variable in the relevant methods."}, {"code": [{"msg": "", "code": [" private EntryManager myColorManager;"], "textRange": {"endLine": 63, "startLine": 63, "startOffset": 25, "endOffset": 39}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Remove the \"myColorManager\" field and declare it as a local variable in the relevant methods."}, {"code": [{"msg": "", "code": [" private EntryManager myShapeManager;"], "textRange": {"endLine": 64, "startLine": 64, "startOffset": 25, "endOffset": 39}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Remove the \"myShapeManager\" field and declare it as a local variable in the relevant methods."}, {"code": [{"msg": "", "code": [" private LanguageManager myLanguageManager;"], "textRange": {"endLine": 65, "startLine": 65, "startOffset": 28, "endOffset": 45}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Remove the \"myLanguageManager\" field and declare it as a local variable in the relevant methods."}, {"code": [{"msg": "", "code": [" private MultipleTurtles myTurtles;"], "textRange": {"endLine": 69, "startLine": 69, "startOffset": 28, "endOffset": 37}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Remove the \"myTurtles\" field and declare it as a local variable in the relevant methods."}, {"code": [{"msg": "", "code": ["public class UserInterface {"], "textRange": {"endLine": 33, "startLine": 33, "startOffset": 13, "endOffset": 26}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Classes should not be coupled to too many other classes (Single Responsibility Principle)", "path": ["duke-compsci308:test-xu:src/frontend/UserInterface.java"], "message": "Split this class into smaller and more specialized ones to reduce its dependencies on other classes from 30 to the maximum authorized 20 or less."}], "src/frontend/ErrorMessage.java": [], "src/frontend/TurtleManagerView.java": [], "src/frontend/Display.java": [{"code": [{"msg": "", "code": [" private Group root;"], "textRange": {"endLine": 28, "startLine": 28, "startOffset": 18, "endOffset": 22}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Private fields only used as local variables in methods should become local variables", "path": ["duke-compsci308:test-xu:src/frontend/Display.java"], "message": "Remove the \"root\" field and declare it as a local variable in the relevant methods."}], "src/frontend/WorkspaceView.java": [{"code": [{"msg": "", "code": [" catch(ClassCastException e){"], "textRange": {"endLine": 30, "startLine": 30, "startOffset": 14, "endOffset": 34}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Exception handlers should preserve the original exceptions", "path": ["duke-compsci308:test-xu:src/frontend/WorkspaceView.java"], "message": "Either log or rethrow this exception."}], "src/frontend/StringDisplayCell.java": [], "src/frontend/Entry.java": []}, "directories": {"src/frontend/turtle": []}}, "src/backend": {"files": {"src/backend/CommandParser.java": [{"code": [{"msg": "", "code": ["\t\t\tnewCommand = newCommand + commandPieces[0] + \" \";"], "textRange": {"endLine": 141, "startLine": 141, "startOffset": 3, "endOffset": 13}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Strings should not be concatenated using '+' in a loop", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Use a StringBuilder instead."}, {"code": [{"msg": "", "code": ["\t\t\tnewCommand = newCommand + commandPieces[i] + \" \";"], "textRange": {"endLine": 144, "startLine": 144, "startOffset": 3, "endOffset": 13}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Strings should not be concatenated using '+' in a loop", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Use a StringBuilder instead."}, {"code": [{"msg": "", "code": ["\t\tif (originalCommandPieces[0] != \"\\\\(\") {"], "textRange": {"endLine": 148, "startLine": 148, "startOffset": 31, "endOffset": 33}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "\"==\" and \"!=\" should not be used when \"equals\" is overridden", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Use the \"equals\" method if value comparison was intended."}, {"code": [{"msg": "", "code": ["\t\t\tresult = result + \" \" + commandPieces[y];"], "textRange": {"endLine": 230, "startLine": 230, "startOffset": 3, "endOffset": 9}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Strings should not be concatenated using '+' in a loop", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Use a StringBuilder instead."}, {"code": [{"msg": "", "code": ["\t\t} catch (FileNotFoundException e) {"], "textRange": {"endLine": 406, "startLine": 406, "startOffset": 11, "endOffset": 34}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Exception handlers should preserve the original exceptions", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Either log or rethrow this exception."}, {"code": [{"msg": "", "code": ["\t\t} catch (IOException e) {"], "textRange": {"endLine": 408, "startLine": 408, "startOffset": 11, "endOffset": 24}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Exception handlers should preserve the original exceptions", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Either log or rethrow this exception."}, {"code": [{"msg": "", "code": ["\t\tif (myParametersMap.getNumParams(commandPiece) < 2 || commandPieces.length < 3) {"], "textRange": {"endLine": 135, "startLine": 135, "startOffset": 79, "endOffset": 80}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Assign this magic number 3 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": ["\t\tint endBracket = command.lastIndexOf(']');"], "textRange": {"endLine": 156, "startLine": 156, "startOffset": 6, "endOffset": 16}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Variables should not be declared before they are relevant", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Move the declaration of \"endBracket\" closer to the code that uses it."}, {"code": [{"msg": "", "code": ["\t\tMap<String, String> paramToNum = new HashMap<String, String>();"], "textRange": {"endLine": 200, "startLine": 200, "startOffset": 22, "endOffset": 32}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Variables should not be declared before they are relevant", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Move the declaration of \"paramToNum\" closer to the code that uses it."}, {"code": [{"msg": "", "code": ["\t\t\tint size = instructions.size() - 1;"], "textRange": {"endLine": 275, "startLine": 275, "startOffset": 7, "endOffset": 11}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Variables should not be declared before they are relevant", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Move the declaration of \"size\" closer to the code that uses it."}, {"code": [{"msg": "", "code": ["\t\tMap<String, String> paramToNum = new HashMap<String, String>();"], "textRange": {"endLine": 200, "startLine": 200, "startOffset": 46, "endOffset": 62}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": ["\t\tList<ParseNode> rootList = new ArrayList<ParseNode>();"], "textRange": {"endLine": 266, "startLine": 266, "startOffset": 42, "endOffset": 53}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": ["\t\tList<ParseNode> instructions = new ArrayList<ParseNode>();"], "textRange": {"endLine": 272, "startLine": 272, "startOffset": 46, "endOffset": 57}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": ["\t\tif (m.find())"], "textRange": {"endLine": 127, "startLine": 127, "startOffset": 2, "endOffset": 4}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Missing curly brace."}, {"code": [{"msg": "", "code": ["import java.util.*;"], "textRange": {"endLine": 4, "startLine": 4, "startOffset": 7, "endOffset": 18}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Wildcard imports should not be used", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Explicitly import the specific classes needed."}, {"code": [{"msg": "", "code": ["import frontend.*;"], "textRange": {"endLine": 16, "startLine": 16, "startOffset": 7, "endOffset": 17}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Wildcard imports should not be used", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Explicitly import the specific classes needed."}, {"code": [{"code": ["\t\tif(count == 0){"], "textRange": {"endLine": 368, "startLine": 368, "startOffset": 2, "endOffset": 4}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Collapsible \"if\" statements should be merged", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Merge this if statement with the enclosing one."}, {"code": [{"msg": "", "code": ["\t\t\tString desiredCommand = getDesiredCommand(properties,properties.keys(),command);"], "textRange": {"endLine": 404, "startLine": 404, "startOffset": 27, "endOffset": 82}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Local Variables should not be declared and then immediately returned or thrown", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Immediately return this expression instead of assigning it to the temporary variable \"desiredCommand\"."}, {"code": [{"msg": "+1", "code": ["\t\tif(parsingHouseKeeping(updateString, command, terminal, workspace, commandManager) == null){"], "textRange": {"endLine": 36, "startLine": 36, "startOffset": 2, "endOffset": 4}}, {"msg": "+1", "code": ["\t\telse if(parsingHouseKeeping(updateString, command, terminal, workspace, commandManager).equals(\"\")){"], "textRange": {"endLine": 39, "startLine": 39, "startOffset": 7, "endOffset": 9}}, {"msg": "+1", "code": ["\t\tif (myUserDefinedHandler.isLoopCommand(instruction)) {"], "textRange": {"endLine": 43, "startLine": 43, "startOffset": 2, "endOffset": 4}}, {"msg": "+1", "code": ["\t\telse {"], "textRange": {"endLine": 47, "startLine": 47, "startOffset": 2, "endOffset": 6}}, {"msg": "+2 (incl 1 for nesting)", "code": ["\t\t\tfor(String s: command.split(\"\\\\s+\")){"], "textRange": {"endLine": 48, "startLine": 48, "startOffset": 3, "endOffset": 6}}, {"msg": "+3 (incl 2 for nesting)", "code": ["\t\t\t\tif(myUserDefinedHandler.isLoopCommand(parseCommand(s))){"], "textRange": {"endLine": 49, "startLine": 49, "startOffset": 4, "endOffset": 6}}, {"msg": "+2 (incl 1 for nesting)", "code": ["\t\t\tif(newCommand == null){"], "textRange": {"endLine": 56, "startLine": 56, "startOffset": 3, "endOffset": 5}}, {"msg": "+2 (incl 1 for nesting)", "code": ["\t\t\tif(!command.equals(newCommand)){"], "textRange": {"endLine": 59, "startLine": 59, "startOffset": 3, "endOffset": 5}}, {"msg": "+1", "code": ["\t\t\telse{"], "textRange": {"endLine": 62, "startLine": 62, "startOffset": 3, "endOffset": 7}}, {"msg": "+3 (incl 2 for nesting)", "code": ["\t\t\tif(commandTree == null){"], "textRange": {"endLine": 65, "startLine": 65, "startOffset": 3, "endOffset": 5}}, {"msg": "+3 (incl 2 for nesting)", "code": ["\t\t\tif(read){"], "textRange": {"endLine": 69, "startLine": 69, "startOffset": 3, "endOffset": 5}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Cognitive Complexity of methods should not be too high", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed."}, {"code": [{"msg": "+1", "code": ["\t\tfor(ParseNode child: current.getChildren()){"], "textRange": {"endLine": 362, "startLine": 362, "startOffset": 2, "endOffset": 5}}, {"msg": "+2 (incl 1 for nesting)", "code": ["\t\t\tif(child.getChildren().size() != 0){"], "textRange": {"endLine": 363, "startLine": 363, "startOffset": 3, "endOffset": 5}}, {"msg": "+1", "code": ["\t\tif(count == 0){"], "textRange": {"endLine": 368, "startLine": 368, "startOffset": 2, "endOffset": 4}}, {"msg": "+2 (incl 1 for nesting)", "code": ["\t\t\tif(current.getChildren().size() == myParametersMap.getNumParams(current.getName())){"], "textRange": {"endLine": 369, "startLine": 369, "startOffset": 3, "endOffset": 5}}, {"msg": "+3 (incl 2 for nesting)", "code": ["\t\t\t\tfor(ParseNode node: nodeChildren){"], "textRange": {"endLine": 372, "startLine": 372, "startOffset": 4, "endOffset": 7}}, {"msg": "+4 (incl 3 for nesting)", "code": ["\t\t\t\t\tif(!node.getName().equals(\"\")){"], "textRange": {"endLine": 373, "startLine": 373, "startOffset": 5, "endOffset": 7}}, {"msg": "+3 (incl 2 for nesting)", "code": ["\t\t\t\tfor(ParseNode w: nodeChildren){"], "textRange": {"endLine": 379, "startLine": 379, "startOffset": 4, "endOffset": 7}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Cognitive Complexity of methods should not be too high", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed."}, {"code": [{"msg": "", "code": ["\t\tcommand = command.trim();"], "textRange": {"endLine": 35, "startLine": 35, "startOffset": 2, "endOffset": 9}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Method parameters, caught exceptions and foreach variables should not be reassigned", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Introduce a new variable instead of reusing the parameter \"command\"."}, {"code": [{"msg": "", "code": ["\t\tcommand = command.substring(command.lastIndexOf(']')+1).trim();"], "textRange": {"endLine": 79, "startLine": 79, "startOffset": 2, "endOffset": 9}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Method parameters, caught exceptions and foreach variables should not be reassigned", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Introduce a new variable instead of reusing the parameter \"command\"."}, {"code": [{"msg": "Nesting + 1", "code": ["\t\twhile(hasMethods){"], "textRange": {"endLine": 177, "startLine": 177, "startOffset": 2, "endOffset": 7}}, {"msg": "Nesting + 1", "code": ["\t\t\tfor(String s: commandPieces){"], "textRange": {"endLine": 180, "startLine": 180, "startOffset": 3, "endOffset": 6}}, {"msg": "Nesting + 1", "code": ["\t\t\t\tif(commandManager.contains(s) != null){"], "textRange": {"endLine": 181, "startLine": 181, "startOffset": 4, "endOffset": 6}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control flow statements \"if\", \"for\", \"while\", \"switch\" and \"try\" should not be nested too deeply", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Refactor this code to not nest more than 3 if/for/while/switch/try statements."}, {"code": [{"msg": "", "code": ["\t\t\t\t\tcommand = command.substring(0, loc) + str2;"], "textRange": {"endLine": 188, "startLine": 188, "startOffset": 5, "endOffset": 12}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Method parameters, caught exceptions and foreach variables should not be reassigned", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Introduce a new variable instead of reusing the parameter \"command\"."}, {"code": [{"msg": "", "code": ["\t\t\ttempString = tempString.substring(breakpoint).trim();"], "textRange": {"endLine": 240, "startLine": 240, "startOffset": 3, "endOffset": 13}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Method parameters, caught exceptions and foreach variables should not be reassigned", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Introduce a new variable instead of reusing the parameter \"tempString\"."}, {"code": [{"msg": "", "code": ["\t\t\ttempString = tempString.substring(0, tempString.indexOf(\"[\")) + tempString.substring(tempString.indexOf(']') +1 );"], "textRange": {"endLine": 257, "startLine": 257, "startOffset": 3, "endOffset": 13}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Method parameters, caught exceptions and foreach variables should not be reassigned", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Introduce a new variable instead of reusing the parameter \"tempString\"."}, {"code": [{"msg": "Nesting + 1", "code": ["\t\tif(!parsedCommand.equals(\"\")){"], "textRange": {"endLine": 318, "startLine": 318, "startOffset": 2, "endOffset": 4}}, {"msg": "Nesting + 1", "code": ["\t\t\ttry{"], "textRange": {"endLine": 322, "startLine": 322, "startOffset": 3, "endOffset": 6}}, {"msg": "Nesting + 1", "code": ["\t\t\t\tif(commands[i].charAt(0) == ':'){"], "textRange": {"endLine": 323, "startLine": 323, "startOffset": 4, "endOffset": 6}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control flow statements \"if\", \"for\", \"while\", \"switch\" and \"try\" should not be nested too deeply", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Refactor this code to not nest more than 3 if/for/while/switch/try statements."}, {"code": [{"msg": "Nesting + 1", "code": ["\t\tif(count == 0){"], "textRange": {"endLine": 368, "startLine": 368, "startOffset": 2, "endOffset": 4}}, {"msg": "Nesting + 1", "code": ["\t\t\tif(current.getChildren().size() == myParametersMap.getNumParams(current.getName())){"], "textRange": {"endLine": 369, "startLine": 369, "startOffset": 3, "endOffset": 5}}, {"msg": "Nesting + 1", "code": ["\t\t\t\tfor(ParseNode node: nodeChildren){"], "textRange": {"endLine": 372, "startLine": 372, "startOffset": 4, "endOffset": 7}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control flow statements \"if\", \"for\", \"while\", \"switch\" and \"try\" should not be nested too deeply", "path": ["duke-compsci308:test-xu:src/backend/CommandParser.java"], "message": "Refactor this code to not nest more than 3 if/for/while/switch/try statements."}], "src/backend/UserDefinedCommands.java": [{"code": [{"msg": "", "code": ["\t\tmyTurtleInterface = new HashMap<String, SpecialTurtleInterface>();"], "textRange": {"endLine": 15, "startLine": 15, "startOffset": 33, "endOffset": 65}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/backend/UserDefinedCommands.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": ["\t\tMap<String, UserDefinedInterface> result = new HashMap<String, UserDefinedInterface>();"], "textRange": {"endLine": 20, "startLine": 20, "startOffset": 56, "endOffset": 86}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/backend/UserDefinedCommands.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": ["\t\t\tArrayList<String> commands = new ArrayList<String>();"], "textRange": {"endLine": 42, "startLine": 42, "startOffset": 45, "endOffset": 53}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/backend/UserDefinedCommands.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": ["import java.util.*;"], "textRange": {"endLine": 3, "startLine": 3, "startOffset": 7, "endOffset": 18}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Wildcard imports should not be used", "path": ["duke-compsci308:test-xu:src/backend/UserDefinedCommands.java"], "message": "Explicitly import the specific classes needed."}, {"code": [{"msg": "", "code": ["import methodinterfaces.*;"], "textRange": {"endLine": 7, "startLine": 7, "startOffset": 7, "endOffset": 25}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Wildcard imports should not be used", "path": ["duke-compsci308:test-xu:src/backend/UserDefinedCommands.java"], "message": "Explicitly import the specific classes needed."}, {"code": [{"msg": "", "code": ["\tpublic Double callCommand(String command, String instruction, CommandParser parser, "], "textRange": {"endLine": 38, "startLine": 38, "startOffset": 15, "endOffset": 26}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Methods should not have too many parameters", "path": ["duke-compsci308:test-xu:src/backend/UserDefinedCommands.java"], "message": "Method has 8 parameters, which is greater than 7 authorized."}], "src/backend/ParametersMap.java": [{"code": [{"msg": "", "code": ["\t\tmyParamMap.put(\"SetPalette\", 4);"], "textRange": {"endLine": 63, "startLine": 63, "startOffset": 31, "endOffset": 32}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/backend/ParametersMap.java"], "message": "Assign this magic number 4 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": ["\t\tmyParamMap = new HashMap<String, Integer>();"], "textRange": {"endLine": 10, "startLine": 10, "startOffset": 26, "endOffset": 43}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/backend/ParametersMap.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}], "src/backend/ParseNode.java": [{"code": [{"msg": "", "code": ["\t \treturn myMultiValues;"], "textRange": {"endLine": 25, "startLine": 25, "startOffset": 13, "endOffset": 26}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Mutable members should not be stored or returned directly", "path": ["duke-compsci308:test-xu:src/backend/ParseNode.java"], "message": "Return a copy of \"myMultiValues\"."}, {"code": [{"msg": "", "code": ["\t \treturn myChildren;"], "textRange": {"endLine": 49, "startLine": 49, "startOffset": 13, "endOffset": 23}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "Mutable members should not be stored or returned directly", "path": ["duke-compsci308:test-xu:src/backend/ParseNode.java"], "message": "Return a copy of \"myChildren\"."}, {"code": [{"msg": "", "code": ["\t \tmyMultiValues = new ArrayList<Double>();"], "textRange": {"endLine": 14, "startLine": 14, "startOffset": 35, "endOffset": 43}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/backend/ParseNode.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": ["\t myChildren = new ArrayList<ParseNode>();"], "textRange": {"endLine": 17, "startLine": 17, "startOffset": 35, "endOffset": 46}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/backend/ParseNode.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": ["import java.util.*;"], "textRange": {"endLine": 3, "startLine": 3, "startOffset": 7, "endOffset": 18}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Wildcard imports should not be used", "path": ["duke-compsci308:test-xu:src/backend/ParseNode.java"], "message": "Explicitly import the specific classes needed."}], "src/backend/Commands.java": [{"code": [{"msg": "", "code": ["\tprivate Map<String, MathInterface> instructions = new HashMap<String, MathInterface>();"], "textRange": {"endLine": 10, "startLine": 10, "startOffset": 62, "endOffset": 85}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/backend/Commands.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": ["import methodinterfaces.*;"], "textRange": {"endLine": 6, "startLine": 6, "startOffset": 7, "endOffset": 25}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Wildcard imports should not be used", "path": ["duke-compsci308:test-xu:src/backend/Commands.java"], "message": "Explicitly import the specific classes needed."}]}, "directories": {}}, "src/resources": {"files": {}, "directories": {"src/resources/languages": [], "src/resources/frontendResources": []}}, "src/frontend/turtle": {"files": {"src/frontend/turtle/TurnTurtleAction.java": [{"code": [{"msg": "", "code": ["\tprivate double startAngle;"], "textRange": {"endLine": 11, "startLine": 11, "startOffset": 16, "endOffset": 26}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Unused \"private\" fields should be removed", "path": ["duke-compsci308:test-xu:src/frontend/turtle/TurnTurtleAction.java"], "message": "Remove this unused \"startAngle\" private field."}], "src/frontend/turtle/TurtleAction.java": [], "src/frontend/turtle/MoveTurtleAction.java": [], "src/frontend/turtle/MultipleTurtles.java": [{"code": [{"msg": "", "code": [" new HashMap<String, TurtleInterface>();"], "textRange": {"endLine": 54, "startLine": 54, "startOffset": 23, "endOffset": 48}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": [" new HashMap<String, MultiTurtleInterface>();"], "textRange": {"endLine": 56, "startLine": 56, "startOffset": 23, "endOffset": 53}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": [" private Map<String, DisplayInterface> displayInstructions = new HashMap<String, DisplayInterface>();"], "textRange": {"endLine": 57, "startLine": 57, "startOffset": 75, "endOffset": 101}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": [" Set<Integer> currentTurtles = new HashSet<Integer>();"], "textRange": {"endLine": 158, "startLine": 158, "startOffset": 49, "endOffset": 58}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}, {"code": [{"msg": "", "code": ["import java.util.*;"], "textRange": {"endLine": 3, "startLine": 3, "startOffset": 7, "endOffset": 18}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Wildcard imports should not be used", "path": ["duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java"], "message": "Explicitly import the specific classes needed."}, {"code": [{"msg": "", "code": [" private ObjectProperty<Image> defaultTurtleImage;"], "textRange": {"endLine": 58, "startLine": 58, "startOffset": 34, "endOffset": 52}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Unused \"private\" fields should be removed", "path": ["duke-compsci308:test-xu:src/frontend/turtle/MultipleTurtles.java"], "message": "Remove this unused \"defaultTurtleImage\" private field."}], "src/frontend/turtle/AnimationController.java": [{"code": [{"msg": "", "code": ["\tprivate static double INITIAL_TURN_SPEED = 5;"], "textRange": {"endLine": 28, "startLine": 28, "startOffset": 44, "endOffset": 45}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/frontend/turtle/AnimationController.java"], "message": "Assign this magic number 5 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": ["\t\ttimeline = new ArrayList<TurtleAction>();"], "textRange": {"endLine": 32, "startLine": 32, "startOffset": 26, "endOffset": 40}}], "severity": "low", "author": "chengkang.xu@duke.edu", "rule": "The diamond operator (\"<>\") should be used", "path": ["duke-compsci308:test-xu:src/frontend/turtle/AnimationController.java"], "message": "Replace the type specification in this constructor call with the diamond operator (\"<>\")."}], "src/frontend/turtle/Turtle.java": [], "src/frontend/turtle/SingleTurtle.java": [{"code": [{"msg": "", "code": [" double deltaX = Math.sin(getTurtleAngle() * Math.PI / 180) * length;"], "textRange": {"endLine": 137, "startLine": 137, "startOffset": 62, "endOffset": 65}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/frontend/turtle/SingleTurtle.java"], "message": "Assign this magic number 180 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" double deltaY = Math.cos(getTurtleAngle() * Math.PI / 180) * length;"], "textRange": {"endLine": 138, "startLine": 138, "startOffset": 62, "endOffset": 65}}], "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Magic numbers should not be used", "path": ["duke-compsci308:test-xu:src/frontend/turtle/SingleTurtle.java"], "message": "Assign this magic number 180 to a well-named constant, and use the constant instead."}, {"code": [{"msg": "", "code": [" else"], "textRange": {"endLine": 152, "startLine": 152, "startOffset": 8, "endOffset": 12}}], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "Control structures should use curly braces", "path": ["duke-compsci308:test-xu:src/frontend/turtle/SingleTurtle.java"], "message": "Missing curly brace."}]}, "directories": {}}}