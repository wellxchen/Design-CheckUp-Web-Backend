{ "severitylist": [ "fail", "high", "medium", "low", "info" ], "error": { "Duplications": { "category description": "DRY: no duplicated code, either exactly (from cutting and pasting), structurally (in flow of control or decisions), or in setup ('boilerplate' code)", "detail": [ { "code": [ { "msg": "Duplication", "code": [ "\t\t\tparser.throwError(\"Not a Valid Command!\");" ], "textRange": { "endLine": 24, "startLine": 24, "startOffset": 21, "endOffset": 43 } }, { "msg": "Duplication", "code": [ "\t\t\tparser.throwError(\"Not a Valid Command!\");" ], "textRange": { "endLine": 34, "startLine": 34, "startOffset": 21, "endOffset": 43 } }, { "msg": "Duplication", "code": [ "\t\t\tparser.throwError(\"Not a Valid Command!\");" ], "textRange": { "endLine": 39, "startLine": 39, "startOffset": 21, "endOffset": 43 } }, { "msg": "Duplication", "code": [ "\t\t\tparser.throwError(\"Not a Valid Command!\");" ], "textRange": { "endLine": 57, "startLine": 57, "startOffset": 21, "endOffset": 43 } } ], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "String literals should not be duplicated", "path": [ "duke-compsci308:test-xu:src/methodinterfaces/UserDefinedDoTimes.java" ], "message": "Define a constant instead of duplicating this literal \"Not a Valid Command!\" 4 times." }, { "code": [ { "msg": "Duplication", "code": [ "\t\t\tparser.throwError(\"Not a Valid Command!\");" ], "textRange": { "endLine": 23, "startLine": 23, "startOffset": 21, "endOffset": 43 } }, { "msg": "Duplication", "code": [ "\t\t\tparser.throwError(\"Not a Valid Command!\");" ], "textRange": { "endLine": 33, "startLine": 33, "startOffset": 21, "endOffset": 43 } }, { "msg": "Duplication", "code": [ "\t\t\tparser.throwError(\"Not a Valid Command!\");" ], "textRange": { "endLine": 38, "startLine": 38, "startOffset": 21, "endOffset": 43 } }, { "msg": "Duplication", "code": [ "\t\t\tparser.throwError(\"Not a Valid Command!\");" ], "textRange": { "endLine": 58, "startLine": 58, "startOffset": 21, "endOffset": 43 } } ], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "String literals should not be duplicated", "path": [ "duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java" ], "message": "Define a constant instead of duplicating this literal \"Not a Valid Command!\" 4 times." }, { "code": [ { "msg": "Duplication", "code": [ "\t\t\t\tparser.throwError(\"Not a Valid Command!\");" ], "textRange": { "endLine": 28, "startLine": 28, "startOffset": 22, "endOffset": 44 } }, { "msg": "Duplication", "code": [ "\t\t\t\tparser.throwError(\"Not a Valid Command!\");" ], "textRange": { "endLine": 38, "startLine": 38, "startOffset": 22, "endOffset": 44 } }, { "msg": "Duplication", "code": [ "\t\t\tparser.throwError(\"Not a Valid Command!\");" ], "textRange": { "endLine": 46, "startLine": 46, "startOffset": 21, "endOffset": 43 } } ], "severity": "high", "author": "chengkang.xu@duke.edu", "rule": "String literals should not be duplicated", "path": [ "duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIfElse.java" ], "message": "Define a constant instead of duplicating this literal \"Not a Valid Command!\" 3 times." }, { "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Source files should not have any duplicated blocks", "duplications": [ [ { "code": [ "\t\telse {", "\t\t\tparser.throwError(\"Not a Valid Command!\");", "\t\t\treturn;", "\t\t}", "\t\tString newCommand = \"\";", "\t\tif (m.find()) {", "\t\t\tnewCommand = m.group(1);", "\t\t\tif ( userDefinedCommands.contains(parser.parseCommand(newCommand.split(\"\\\\s+\")[0])))", "\t\t\t\tnewCommand = newCommand + \"]\";", "\t\t}", "\t\telse {", "\t\t\tparser.throwError(\"Not a Valid Command!\");", "\t\t\treturn;" ], "loc": "duke-compsci308:test-xu:src/methodinterfaces/UserDefinedDoTimes.java", "endLine": 35, "startLine": 23 }, { "code": [ "\t\telse {", "\t\t\tparser.throwError(\"Not a Valid Command!\");", "\t\t\treturn;", "\t\t}", "\t\tString newCommand = \"\";", "\t\tif (m.find()) {", "\t\t\tnewCommand = m.group(1);", "\t\t\tif ( userDefinedCommands.contains(parser.parseCommand(newCommand.split(\"\\\\s+\")[0])))", "\t\t\t\tnewCommand = newCommand + \"]\";", "\t\t}", "\t\telse {", "\t\t\tparser.throwError(\"Not a Valid Command!\");", "\t\t\treturn;" ], "loc": "duke-compsci308:test-xu:src/methodinterfaces/UserDefinedFor.java", "endLine": 34, "startLine": 22 } ] ], "path": [ "duke-compsci308:test-xu:src/methodinterfaces/UserDefinedDoTimes.java" ], "message": "1 duplicated blocks of code must be removed." }, { "severity": "medium", "author": "chengkang.xu@duke.edu", "rule": "Source files should not have any duplicated blocks", "duplications": [ [ { "code": [ "\t@Override", "\tpublic void executeCommand(String command, CommandParser parser, List<String> userDefinedCommands,", "\t\t\tEntryManager terminal, EntryManager commandManager, ", "\t\t\tEntryManager workspace, boolean read) {", "\t\tString[] commandPieces = command.split(\"\\\\s+\");", "\t\ttry {", "\t\t\tint expr = Integer.parseInt(commandPieces[1]);", "\t\t\tPattern p = Pattern.compile(\"\\\\[(.*?)\\\\]\");", "\t\t\tMatcher m = p.matcher(command);", "\t\t\tString newCommand = \"\";", "\t\t\tif (m.find()) {", "\t\t\t\tnewCommand = m.group(1);", "\t\t\t\tif ( userDefinedCommands.contains(parser.parseCommand(newCommand.split(\"\\\\s+\")[0])))", "\t\t\t\t\tnewCommand = newCommand + \"]\";", "\t\t\t}", "\t\t\telse {", "\t\t\t\tparser.throwError(\"Not a Valid Command!\");", "\t\t\t\treturn;" ], "loc": "duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java", "endLine": 30, "startLine": 13 }, { "code": [ "\t@Override", "\tpublic void executeCommand(String command, CommandParser parser, List<String> userDefinedCommands, EntryManager terminal, EntryManager commandManager,", "\t\t\tEntryManager workspace, boolean read) {", "\t\tString[] commandPieces = command.split(\"\\\\s+\");", "\t\ttry {", "\t\t\tint expr = Integer.parseInt(commandPieces[1]);", "\t\t\tPattern p = Pattern.compile(\"\\\\[(.*?)\\\\]\");", "\t\t\tMatcher m = p.matcher(command);", "\t\t\tString newCommand = \"\";", "\t\t\tif (m.find()) {", "\t\t\t\tnewCommand = m.group(1);", "\t\t\t\tif ( userDefinedCommands.contains(parser.parseCommand(newCommand.split(\"\\\\s+\")[0])))", "\t\t\t\t\tnewCommand = newCommand + \"]\";", "\t\t\t}", "\t\t\telse {", "\t\t\t\tparser.throwError(\"Not a Valid Command!\");", "\t\t\t\treturn;" ], "loc": "duke-compsci308:test-xu:src/methodinterfaces/UserDefinedRepeat.java", "endLine": 30, "startLine": 14 } ] ], "path": [ "duke-compsci308:test-xu:src/methodinterfaces/UserDefinedIf.java" ], "message": "1 duplicated blocks of code must be removed." } ] } } }